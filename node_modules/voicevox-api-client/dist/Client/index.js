"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Client = void 0;
const fetch_1 = require("../fetch");
const Other_1 = require("./Other");
const Query_1 = require("./Query");
const Voice_1 = require("./Voice");
class Client {
    constructor(url) {
        this.query = new Query_1.QueryClient(this);
        this.voice = new Voice_1.VoiceClient(this);
        this.other = new Other_1.OtherClient(this);
        this.url = new URL(url);
    }
    request(pathname, init, method = 'POST') {
        return __awaiter(this, void 0, void 0, function* () {
            const url = new URL(pathname, this.url);
            const res = yield (0, fetch_1.fetch)(url.href, Object.assign({ method: method, headers: {
                    'Content-Type': 'application/json',
                } }, init));
            if (res.status !== 200) {
                throw new Error(`${res.status} ${res.statusText}`);
            }
            return res;
        });
    }
}
exports.Client = Client;
//# sourceMappingURL=index.js.map