{"version":3,"sources":["webpack://PIXI.live2d/webpack/universalModuleDefinition","webpack://PIXI.live2d/webpack/bootstrap","webpack://PIXI.live2d/./src/utils/log.ts","webpack://PIXI.live2d/./src/utils/math.ts","webpack://PIXI.live2d/./src/utils/obj.ts","webpack://PIXI.live2d/./src/utils/string.ts","webpack://PIXI.live2d/./src/config.ts","webpack://PIXI.live2d/external {\"commonjs\":\"@pixi/math\",\"commonjs2\":\"@pixi/math\",\"amd\":\"@pixi/math\",\"root\":\"PIXI\"}","webpack://PIXI.live2d/external {\"commonjs\":\"@pixi/utils\",\"commonjs2\":\"@pixi/utils\",\"amd\":\"@pixi/utils\",\"root\":[\"PIXI\",\"utils\"]}","webpack://PIXI.live2d/./src/factory/Live2DLoader.ts","webpack://PIXI.live2d/./src/factory/model-middlewares.ts","webpack://PIXI.live2d/./src/factory/texture.ts","webpack://PIXI.live2d/./src/factory/Live2DFactory.ts","webpack://PIXI.live2d/./src/cubism-common/index.ts","webpack://PIXI.live2d/./src/cubism-common/SoundManager.ts","webpack://PIXI.live2d/./src/cubism-common/constants.ts","webpack://PIXI.live2d/./node_modules/lodash/_root.js","webpack://PIXI.live2d/./src/cubism-common/MotionState.ts","webpack://PIXI.live2d/./node_modules/lodash/_getNative.js","webpack://PIXI.live2d/./src/cubism-common/ExpressionManager.ts","webpack://PIXI.live2d/./src/cubism-common/ModelSettings.ts","webpack://PIXI.live2d/./src/cubism-common/MotionManager.ts","webpack://PIXI.live2d/./src/cubism-common/InternalModel.ts","webpack://PIXI.live2d/./src/cubism-common/FocusController.ts","webpack://PIXI.live2d/./src/factory/XHRLoader.ts","webpack://PIXI.live2d/./src/utils/middleware.ts","webpack://PIXI.live2d/external {\"commonjs\":\"@pixi/core\",\"commonjs2\":\"@pixi/core\",\"amd\":\"@pixi/core\",\"root\":\"PIXI\"}","webpack://PIXI.live2d/./node_modules/lodash/_baseGetTag.js","webpack://PIXI.live2d/./node_modules/lodash/_Symbol.js","webpack://PIXI.live2d/external {\"commonjs\":\"@pixi/text\",\"commonjs2\":\"@pixi/text\",\"amd\":\"@pixi/text\",\"root\":\"PIXI\"}","webpack://PIXI.live2d/./node_modules/lodash/identity.js","webpack://PIXI.live2d/./node_modules/lodash/isObject.js","webpack://PIXI.live2d/./src/InteractionMixin.ts","webpack://PIXI.live2d/./src/Live2DTransform.ts","webpack://PIXI.live2d/./src/Live2DModel.ts","webpack://PIXI.live2d/./src/factory/FileLoader.ts","webpack://PIXI.live2d/./src/factory/ZipLoader.ts","webpack://PIXI.live2d/./src/tools/HitAreaFrames.ts","webpack://PIXI.live2d/./node_modules/lodash/pull.js","webpack://PIXI.live2d/external {\"commonjs\":\"@pixi/display\",\"commonjs2\":\"@pixi/display\",\"amd\":\"@pixi/display\",\"root\":\"PIXI\"}","webpack://PIXI.live2d/external {\"commonjs\":\"@pixi/graphics\",\"commonjs2\":\"@pixi/graphics\",\"amd\":\"@pixi/graphics\",\"root\":\"PIXI\"}","webpack://PIXI.live2d/./node_modules/lodash/_defineProperty.js","webpack://PIXI.live2d/./node_modules/lodash/isFunction.js","webpack://PIXI.live2d/./node_modules/lodash/_freeGlobal.js","webpack://PIXI.live2d/./node_modules/lodash/_toSource.js","webpack://PIXI.live2d/./node_modules/lodash/_arrayMap.js","webpack://PIXI.live2d/./node_modules/lodash/_baseUnary.js","webpack://PIXI.live2d/./node_modules/lodash/_baseRest.js","webpack://PIXI.live2d/./node_modules/lodash/_overRest.js","webpack://PIXI.live2d/./node_modules/lodash/_apply.js","webpack://PIXI.live2d/./node_modules/lodash/_setToString.js","webpack://PIXI.live2d/./node_modules/lodash/_baseSetToString.js","webpack://PIXI.live2d/./node_modules/lodash/constant.js","webpack://PIXI.live2d/./node_modules/lodash/_baseIsNative.js","webpack://PIXI.live2d/(webpack)/buildin/global.js","webpack://PIXI.live2d/./node_modules/lodash/_getRawTag.js","webpack://PIXI.live2d/./node_modules/lodash/_objectToString.js","webpack://PIXI.live2d/./node_modules/lodash/_isMasked.js","webpack://PIXI.live2d/./node_modules/lodash/_coreJsData.js","webpack://PIXI.live2d/./node_modules/lodash/_getValue.js","webpack://PIXI.live2d/./node_modules/lodash/_shortOut.js","webpack://PIXI.live2d/./node_modules/lodash/pullAll.js","webpack://PIXI.live2d/./node_modules/lodash/_basePullAll.js","webpack://PIXI.live2d/./node_modules/lodash/_baseIndexOf.js","webpack://PIXI.live2d/./node_modules/lodash/_baseFindIndex.js","webpack://PIXI.live2d/./node_modules/lodash/_baseIsNaN.js","webpack://PIXI.live2d/./node_modules/lodash/_strictIndexOf.js","webpack://PIXI.live2d/./node_modules/lodash/_baseIndexOfWith.js","webpack://PIXI.live2d/./node_modules/lodash/_copyArray.js","webpack://PIXI.live2d/./src/cubism2/patch-motion.ts","webpack://PIXI.live2d/./src/cubism2/Live2DExpression.ts","webpack://PIXI.live2d/./src/cubism2/Cubism2ExpressionManager.ts","webpack://PIXI.live2d/./src/cubism2/Cubism2MotionManager.ts","webpack://PIXI.live2d/./src/cubism2/Live2DEyeBlink.ts","webpack://PIXI.live2d/./src/cubism2/Cubism2InternalModel.ts","webpack://PIXI.live2d/./src/cubism2/Cubism2ModelSettings.ts","webpack://PIXI.live2d/./src/cubism2/Live2DPhysics.ts","webpack://PIXI.live2d/./src/cubism2/Live2DPose.ts","webpack://PIXI.live2d/./src/cubism2/factory.ts","webpack://PIXI.live2d/./src/cubism2/check-runtime.ts","webpack://PIXI.live2d/./src/csm2.ts"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__20__","__WEBPACK_EXTERNAL_MODULE__24__","__WEBPACK_EXTERNAL_MODULE__34__","__WEBPACK_EXTERNAL_MODULE__35__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","logger","clamp","num","lower","upper","rand","min","max","Math","random","copyProperty","type","from","to","fromKey","toKey","copyArray","array","Array","isArray","filter","item","applyMixins","derivedCtor","baseCtors","forEach","baseCtor","getOwnPropertyNames","getOwnPropertyDescriptor","folderName","url","lastSlashIndex","lastIndexOf","slice","log","tag","messages","config","logLevel","LOG_LEVEL_VERBOSE","console","warn","LOG_LEVEL_WARNING","error","LOG_LEVEL_ERROR","LOG_LEVEL_NONE","sound","motionSync","motionFadingDuration","idleMotionFadingDuration","expressionFadingDuration","VERSION","Live2DLoader","context","this","middlewares","then","result","loader","TAG","urlToJSON","next","source","data","load","target","live2dModel","emit","jsonToSettings","settings","runtime","findRuntime","createModelSettings","TypeError","waitUntilReady","ready","setupOptionals","internalModel","tasks","pose","push","createPose","coreModel","catch","e","physics","createPhysics","length","Promise","all","setupEssentials","live2DModel","textureLoadings","textures","map","tex","options","textureOptions","resourceOptions","crossorigin","crossOrigin","fromURL","Error","err","event","autoLoad","texture","baseTexture","valid","resolve","resource","_live2d_load","reject","errorHandler","removeEventListener","addEventListener","createTexture","resolveURL","createInternalModel","modelData","moc","isValidMoc","createCoreModel","runtimes","sort","a","b","version","test","textureLoaded","once","modelLoaded","readyEventEmitted","live2DModelMiddlewares","motionManager","group","index","handleError","definition","definitions","undefined","listeners","includes","releaseTasks","motionTasksMap","set","taskGroup","path","getMotionFile","motionDataType","motion","createMotion","expressionManager","expressionTasksMap","getExpressionFile","expression","createExpression","delete","WeakMap","_loadMotion","loadMotion","_loadExpression","loadExpression","SoundManager","_volume","audios","audio","volume","file","onFinish","onError","Audio","preload","dispose","play","dispatchEvent","ErrorEvent","readyState","HAVE_ENOUGH_DATA","pause","removeAttribute","LOGICAL_WIDTH","LOGICAL_HEIGHT","freeGlobal","freeSelf","self","Function","MotionPriority","MotionState","debug","currentPriority","NONE","reservePriority","priority","currentGroup","currentIndex","dump","reservedGroup","reservedIndex","reservedIdleGroup","reservedIdleIndex","IDLE","setReservedIdle","FORCE","setReserved","setCurrent","requestedGroup","requestedIndex","join","baseIsNative","getValue","ExpressionManager","super","expressions","reserveExpressionIndex","destroyed","defaultExpression","currentExpression","stopAllExpressions","availableIndices","floor","setExpression","_setExpression","getExpressionIndex","indexOf","model","now","isFinished","updateParameters","ModelSettings","json","replacer","files","replaceFiles","assertFileExists","expectedFile","shouldThrow","actualPath","getDefinedFiles","MotionPreloadStrategy","MotionManager","motionGroups","state","playing","idleMotionGroup","groups","idle","setupMotions","stopAllMotions","keys","motionPreload","ALL","NORMAL","reserve","currentAudio","soundURL","getSoundFile","add","readyToPlay","src","start","getMotionName","shouldOverrideExpression","resetExpression","_startMotion","groupDefs","isActive","startMotion","_stopAllMotions","reset","restoreExpression","complete","shouldRequestIdleMotion","startRandomMotion","updated","update","destroy","tempBounds","x","y","width","height","InternalModel","focusController","originalWidth","originalHeight","localTransform","drawingMatrix","hitAreas","textureFlipY","viewport","setupLayout","setupHitAreas","size","getSize","layout","assign","getLayout","scale","offsetX","centerX","left","right","offsetY","centerY","top","bottom","translate","getHitAreaDefs","hitArea","def","hitAreaName","isHit","drawIndex","bounds","getDrawableBounds","vertices","getDrawableVertices","vx","vy","transform","copyFrom","append","dt","FocusController","targetX","targetY","instant","dx","dy","abs","sqrt","maxSpeed","ax","ay","maxA","v","maxV","NetworkError","message","status","aborted","XHRLoader","onload","onerror","xhr","XMLHttpRequest","allXhrSet","xhrSet","xhrMap","Set","cancelXHRs","open","responseType","response","onabort","onloadend","abort","clear","createXHR","send","runMiddlewares","middleware","dispatch","fn","getRawTag","objectToString","symToStringTag","InteractionMixin","_autoInteract","autoInteract","on","onTap","off","manager","interactionManager","unregisterInteraction","onPointerMove","tap","global","focus","tempPoint","tempMatrix","TickerClass","PIXI","Ticker","anchor","onAnchorChange","glContextID","elapsedTime","performance","deltaTime","_autoUpdate","init","Live2DFactory","setupLive2DModel","onLoad","tickerClass","autoUpdate","_destroyed","shared","onTickerUpdate","remove","_options","interactive","pivot","id","setRandomExpression","toModelPosition","hitAreaNames","hitTest","position","clone","skipUpdate","_recursivePostUpdateTransform","parent","displayObjectUpdateTransform","_tempDisplayObjectParent","worldTransform","applyInverse","point","getBounds","contains","_bounds","addFrame","deltaMS","renderer","registerInteraction","plugins","interaction","batch","geometry","shader","shouldUpdateTexture","CONTEXT_UID","updateWebGLContext","gl","_glTextures","pixelStorei","WebGLRenderingContext","UNPACK_FLIP_Y_WEBGL","bindTexture","touched","textureGC","count","framebuffer","internalTransform","globalUniforms","uniforms","projectionMatrix","updateTransform","draw","settingsURL","filePath","resolved","filesMap","fileMap","definedFile","decodeURI","actualFile","find","webkitRelativePath","URL","createObjectURL","_objectURL","settingsFile","endsWith","settingsText","readText","settingsJSON","JSON","parse","reader","FileReader","readAsText","File","createSettings","validateFiles","encodeURI","upload","objectURL","revokeObjectURL","resourceObjectURL","values","unshift","filePaths","getFilePaths","requiredFilePaths","getFiles","settingsFilePath","paths","ZIP_PROTOCOL","uid","sourceURL","zipBlob","startsWith","zipReader","unzip","releaseReader","initialized","texts","strokeWidth","normalColor","activeColor","textStyle","fontSize","fill","stroke","strokeThickness","text","visible","addChild","color","tx","ty","drawRect","_render","pull","baseRest","getNative","func","baseGetTag","isObject","funcToString","toString","iteratee","identity","overRest","setToString","apply","nativeMax","args","arguments","otherArgs","thisArg","baseSetToString","shortOut","constant","string","isFunction","isMasked","toSource","reIsHostCtor","funcProto","objectProto","reIsNative","RegExp","replace","g","nativeObjectToString","isOwn","unmasked","coreJsData","maskSrcKey","exec","IE_PROTO","nativeNow","Date","lastCalled","stamp","remaining","basePullAll","arrayMap","baseIndexOf","baseIndexOfWith","baseUnary","splice","comparator","seen","fromIndex","computed","baseFindIndex","baseIsNaN","strictIndexOf","predicate","fromRight","originalUpdateParam","Live2DMotion","updateParam","entry","onFinishHandler","AMotion","params","setFadeIn","fade_in","setFadeOut","fade_out","param","calc","defaultValue","val","time","weight","motionQueueEnt","setParamFloat","queueManager","MotionQueueManager","findIndex","motions","defaultFadingDuration","EyeState","blinkInterval","closingDuration","closedDuration","openingDuration","eyeState","Idle","eyeParamValue","closedTimer","nextBlinkTimeLeft","leftParam","getParamIndex","rightParam","Closing","setEyeParams","Closed","Opening","tempMatrixArray","Float32Array","drawDataCount","disableCulling","eyeBlink","eyeballXParamIndex","eyeballYParamIndex","angleXParamIndex","angleYParamIndex","angleZParamIndex","bodyAngleXParamIndex","breathParamIndex","initParams","initOpacities","setPartsOpacity","saveParam","arr","getModelContext","_$aS","culling","drawParamWebGL","clipManager","originalSetupClip","setupClip","modelContext","drawParam","getCanvasWidth","getCanvasHeight","center_x","center_y","firstDraw","setGL","glno","prop","WebGLBuffer","curFrameNo","getParameter","FRAMEBUFFER_BINDING","getMaskRenderTexture","bindFramebuffer","FRAMEBUFFER","setTexture","getDrawDataIndex","ids","drawData","getDrawData","getDrawDataID","getTransformedPoints","motionUpdated","updateFocus","updateNaturalMovements","loadParam","addToParamFloat","PI","sin","matrix","setMatrix","isValidJSON","copy","every","entries","SRC_TYPE_MAP","PhysicsHair","Src","SRC_TO_X","SRC_TO_Y","angle","SRC_TO_G_ANGLE","TARGET_TYPE_MAP","Live2DPhysics","physicsHairs","physics_hair","physicsHair","setup","regist","mass","ptype","addSrcParam","targets","addTargetParam","elapsed","Live2DPartsParam","paramIndex","partsIndex","link","getPartsDataIndex","PartsDataID","getID","opacityAnimDuration","partsGroups","parts_visible","parts","initIndex","getParamFloat","partsGroup","visibleOpacity","visibleIndex","originalOpacity","getPartsOpacity","a1","opacity","partGroup","normalizePartsOpacityGroup","copyOpacity","registerRuntime","byteLength","view","Int8Array","String","fromCharCode","Live2DModelWebGL","loadModel","Live2D","getError"],"mappings":"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","file":"cubism2.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@pixi/math\"), require(\"@pixi/utils\"), require(\"@pixi/core\"), require(\"@pixi/text\"), require(\"@pixi/display\"), require(\"@pixi/graphics\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@pixi/math\", \"@pixi/utils\", \"@pixi/core\", \"@pixi/text\", \"@pixi/display\", \"@pixi/graphics\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"live2d\"] = factory(require(\"@pixi/math\"), require(\"@pixi/utils\"), require(\"@pixi/core\"), require(\"@pixi/text\"), require(\"@pixi/display\"), require(\"@pixi/graphics\"));\n\telse\n\t\troot[\"PIXI\"] = root[\"PIXI\"] || {}, root[\"PIXI\"][\"live2d\"] = factory(root[\"PIXI\"], root[\"PIXI\"][\"utils\"], root[\"PIXI\"], root[\"PIXI\"], root[\"PIXI\"], root[\"PIXI\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__20__, __WEBPACK_EXTERNAL_MODULE__24__, __WEBPACK_EXTERNAL_MODULE__34__, __WEBPACK_EXTERNAL_MODULE__35__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 166);\n","import { config } from '@/config';\n\n/**\n * A simple tagged logger.\n *\n * You can replace the methods with your own ones.\n *\n * ```js\n * import { logger } from 'pixi-live2d-display';\n *\n * logger.log = (tag, ...messages) => {\n *     console.log(tag, 'says:', ...messages);\n * };\n * ```\n */\nexport namespace logger {\n    export function log(tag: string, ...messages: any[]) {\n        if (config.logLevel <= config.LOG_LEVEL_VERBOSE) {\n            console.log(`[${tag}]`, ...messages);\n        }\n    }\n\n    export function warn(tag: string, ...messages: any[]) {\n        if (config.logLevel <= config.LOG_LEVEL_WARNING) {\n            console.warn(`[${tag}]`, ...messages);\n        }\n    }\n\n    export function error(tag: string, ...messages: any[]) {\n        if (config.logLevel <= config.LOG_LEVEL_ERROR) {\n            console.error(`[${tag}]`, ...messages);\n        }\n    }\n}\n","/**\n * These functions can be slightly faster than the ones in Lodash.\n * @packageDocumentation\n */\n\nexport function clamp(num: number, lower: number, upper: number) {\n    return num < lower ? lower : num > upper ? upper : num;\n}\n\nexport function rand(min: number, max: number) {\n    return Math.random() * (max - min) + min;\n}\n","/**\n * Copies a property at only if it matches the `type`.\n * @param type - Type expected to match `typeof` on the property.\n * @param from - Source object.\n * @param to - Destination object.\n * @param fromKey - Key of the property in source object.\n * @param toKey - Key of the property in destination object.\n */\n// TODO: lint and fix the formatting!\nexport function copyProperty<From, FromKey extends keyof From, ToKey extends keyof any, To extends Partial<Record<ToKey, From[FromKey]>>>(type: string, from: From, to: To, fromKey: FromKey, toKey: ToKey) {\n    const value = from[fromKey];\n\n    if (value !== null && typeof value === type) {\n        // a type error will occur here, have no idea\n        to[toKey] = value as any;\n    }\n}\n\n/**\n * Copies an array at `key`, filtering the items that match the `type`.\n * @param type - Type expected to match `typeof` on the items.\n * @param from - Source object.\n * @param to - Destination object.\n * @param fromKey - Key of the array property in source object.\n * @param toKey - Key of the array property in destination object.\n */\nexport function copyArray<FromKey extends keyof any, From extends Partial<Record<FromKey, any[]>>, ToKey extends keyof any, To extends Partial<Record<ToKey, any[]>>>(type: string, from: From, to: To, fromKey: FromKey, toKey: ToKey) {\n    const array = from[fromKey];\n\n    if (Array.isArray(array)) {\n        to[toKey] = array.filter(item => item !== null && typeof item === type) as any;\n    }\n}\n\n/**\n * @see {@link https://www.typescriptlang.org/docs/handbook/mixins.html}\n */\nexport function applyMixins(derivedCtor: any, baseCtors: any[]) {\n    baseCtors.forEach(baseCtor => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n            if (name !== 'constructor') {\n                Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name)!);\n            }\n        });\n    });\n}\n","/**\n * Gets the name of parent folder in a url.\n * @param url - URL of a file.\n * @return Name of the parent folder, or the file itself if it has no parent folder.\n */\nexport function folderName(url: string) {\n    let lastSlashIndex = url.lastIndexOf('/');\n\n    if (lastSlashIndex != -1) {\n        url = url.slice(0, lastSlashIndex);\n    }\n\n    lastSlashIndex = url.lastIndexOf('/');\n\n    if (lastSlashIndex !== -1) {\n        url = url.slice(lastSlashIndex + 1);\n    }\n\n    return url;\n}\n","/**\n * Global configs.\n */\nexport namespace config {\n    export const LOG_LEVEL_VERBOSE = 0;\n    export const LOG_LEVEL_WARNING = 1;\n    export const LOG_LEVEL_ERROR = 2;\n    export const LOG_LEVEL_NONE = 999;\n\n    declare const __PRODUCTION__: boolean;\n\n    /**\n     * Global log level.\n     * @default {@link LOG_LEVEL_WARNING}\n     */\n    export let logLevel = __PRODUCTION__ ? LOG_LEVEL_WARNING : LOG_LEVEL_VERBOSE;\n\n    /**\n     * Enabling sound for motions.\n     */\n    export let sound = true;\n\n    /**\n     * Deferring motion and corresponding sound until both are loaded.\n     */\n    export let motionSync = true;\n\n    /**\n     * Default fading duration for motions without such value specified.\n     */\n    export let motionFadingDuration = 500;\n\n    /**\n     * Default fading duration for idle motions without such value specified.\n     */\n    export let idleMotionFadingDuration = 2000;\n\n    /**\n     * Default fading duration for expressions without such value specified.\n     */\n    export let expressionFadingDuration = 500;\n\n    export let cubism4: {\n        /**\n         * Should masks support 4x4 division, which is unofficial and experimental.\n         * See [official manual](https://docs.live2d.com/cubism-sdk-manual/ow-sdk-mask-premake-web/?locale=en_us).\n         * @default true\n         */\n        supportMoreMaskDivisions: boolean;\n    } | undefined;\n}\n\ndeclare const __VERSION__: string;\n\n/**\n * Consistent with the `version` in package.json.\n */\nexport const VERSION = __VERSION__;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","import { ExpressionManager, InternalModel, ModelSettings, MotionManager } from '@/cubism-common';\nimport { XHRLoader } from '@/factory/XHRLoader';\nimport { Live2DModel } from '@/Live2DModel';\nimport { Middleware, runMiddlewares } from '@/utils/middleware';\n\nexport type Live2DLoaderTarget = Live2DModel | InternalModel | MotionManager | ExpressionManager\n\n/**\n * The context transferred through Live2DLoader middlewares.\n */\nexport interface Live2DLoaderContext {\n    /** The XHR's response type. */\n    type: XMLHttpRequestResponseType;\n\n    /** Will be resolved by {@link ModelSettings.resolveURL} if a ModelSettings is provided. */\n    url: string;\n\n    /** If provided, the given URL will be resolved by {@link ModelSettings.resolveURL}. */\n    settings?: ModelSettings;\n\n    /**\n     * Owner of this resource. The load task will be automatically canceled\n     * when receiving an \"destroy\" event from the target.\n     */\n    target?: Live2DLoaderTarget;\n\n    /** Loaded data. */\n    result?: any;\n}\n\nexport class Live2DLoader {\n    static middlewares: Middleware<Live2DLoaderContext>[] = [XHRLoader.loader];\n\n    /**\n     * Loads a resource.\n     * @return Promise that resolves with the loaded data in a format that's consistent with the specified `type`.\n     */\n    static load<T = any>(context: Live2DLoaderContext): Promise<T> {\n        return runMiddlewares(this.middlewares, context).then(() => context.result);\n    }\n}\n","import { Middleware } from '@/utils/middleware';\nimport { Live2DLoader } from '@/factory/Live2DLoader';\nimport { ModelSettings } from '@/cubism-common';\nimport { logger } from '@/utils';\nimport { createTexture } from '@/factory/texture';\nimport { Live2DFactory, Live2DFactoryContext } from '@/factory/Live2DFactory';\n\nconst TAG = 'Live2DFactory';\n\n/**\n * A middleware that converts the source from a URL to a settings JSON object.\n */\nexport const urlToJSON: Middleware<Live2DFactoryContext> = async (context, next) => {\n    if (typeof context.source === 'string') {\n        const data = await Live2DLoader.load({\n            url: context.source,\n            type: 'json',\n            target: context.live2dModel,\n        });\n\n        data.url = context.source;\n\n        context.source = data;\n\n        context.live2dModel.emit('settingsJSONLoaded', data);\n    }\n\n    return next();\n};\n\n/**\n * A middleware that converts the source from a settings JSON object to a ModelSettings instance.\n */\nexport const jsonToSettings: Middleware<Live2DFactoryContext> = async (context, next) => {\n    if (context.source instanceof ModelSettings) {\n        context.settings = context.source;\n\n        return next();\n    } else if (typeof context.source === 'object') {\n        const runtime = Live2DFactory.findRuntime(context.source);\n\n        if (runtime) {\n            const settings = runtime.createModelSettings(context.source);\n\n            context.settings = settings;\n            context.live2dModel.emit('settingsLoaded', settings);\n\n            return next();\n        }\n    }\n\n    throw new TypeError('Unknown settings format.');\n};\n\nexport const waitUntilReady: Middleware<Live2DFactoryContext> = (context, next) => {\n    if (context.settings) {\n        const runtime = Live2DFactory.findRuntime(context.settings);\n\n        if (runtime) {\n            return runtime.ready().then(next);\n        }\n    }\n\n    return next();\n};\n\n/**\n * A middleware that populates the Live2DModel with optional resources.\n * Requires InternalModel in context when all the subsequent middlewares have finished.\n */\nexport const setupOptionals: Middleware<Live2DFactoryContext> = async (context, next) => {\n    // wait until all has finished\n    await next();\n\n    const internalModel = context.internalModel;\n\n    if (internalModel) {\n        const settings = context.settings!;\n        const runtime = Live2DFactory.findRuntime(settings);\n\n        if (runtime) {\n            const tasks: Promise<void>[] = [];\n\n            if (settings.pose) {\n                tasks.push(\n                    Live2DLoader.load({\n                            settings,\n                            url: settings.pose,\n                            type: 'json',\n                            target: internalModel,\n                        })\n                        .then((data: ArrayBuffer) => {\n                            internalModel.pose = runtime.createPose(internalModel.coreModel, data);\n                            context.live2dModel.emit('poseLoaded', internalModel.pose);\n                        })\n                        .catch((e: Error) => logger.warn(TAG, 'Failed to load pose.\\n', e)),\n                );\n            }\n\n            if (settings.physics) {\n                tasks.push(\n                    Live2DLoader.load({\n                            settings,\n                            url: settings.physics,\n                            type: 'json',\n                            target: internalModel,\n                        })\n                        .then((data: ArrayBuffer) => {\n                            internalModel.physics = runtime.createPhysics(internalModel.coreModel, data);\n                            context.live2dModel.emit('physicsLoaded', internalModel.physics);\n                        })\n                        .catch((e: Error) => logger.warn(TAG, 'Failed to load physics.\\n', e)),\n                );\n            }\n\n            if (tasks.length) {\n                await Promise.all(tasks);\n            }\n        }\n    }\n};\n\n/**\n * A middleware that populates the Live2DModel with essential resources.\n * Requires ModelSettings in context immediately, and InternalModel in context\n * when all the subsequent middlewares have finished.\n */\nexport const setupEssentials: Middleware<Live2DFactoryContext> = async (context, next) => {\n    if (context.settings) {\n        const live2DModel = context.live2dModel;\n\n        const textureLoadings = context.settings.textures.map(tex => {\n            const url = context.settings!.resolveURL(tex);\n            return createTexture(url, { crossOrigin: context.options.crossOrigin });\n        });\n\n        // wait for the internal model to be created\n        await next();\n\n        if (context.internalModel) {\n            live2DModel.internalModel = context.internalModel;\n            live2DModel.emit('modelLoaded', context.internalModel);\n        } else {\n            throw new TypeError('Missing internal model.');\n        }\n\n        live2DModel.textures = await Promise.all(textureLoadings);\n        live2DModel.emit('textureLoaded', live2DModel.textures);\n    } else {\n        throw new TypeError('Missing settings.');\n    }\n};\n\n/**\n * A middleware that creates the InternalModel. Requires ModelSettings in context.\n */\nexport const createInternalModel: Middleware<Live2DFactoryContext> = async (context, next) => {\n    const settings = context.settings;\n\n    if (settings instanceof ModelSettings) {\n        const runtime = Live2DFactory.findRuntime(settings);\n\n        if (!runtime) {\n            throw new TypeError('Unknown model settings.');\n        }\n\n        const modelData = await Live2DLoader.load<ArrayBuffer>({\n            settings,\n            url: settings.moc,\n            type: 'arraybuffer',\n            target: context.live2dModel,\n        });\n\n        if (!runtime.isValidMoc(modelData)) {\n            throw new Error('Invalid moc data');\n        }\n\n        const coreModel = runtime.createCoreModel(modelData);\n\n        context.internalModel = runtime.createInternalModel(coreModel, settings, context.options);\n\n        return next();\n    }\n\n    throw new TypeError('Missing settings.');\n};\n","import { Texture } from '@pixi/core';\n\nexport function createTexture(url: string, options: { crossOrigin?: string } = {}): Promise<Texture> {\n    const textureOptions: any = { resourceOptions: { crossorigin: options.crossOrigin } };\n\n    // there's already such a method since Pixi v5.3.0\n    if ((Texture as any).fromURL) {\n        return Texture.fromURL(url, textureOptions).catch(e => {\n            if (e instanceof Error) {\n                throw e;\n            }\n\n            // assume e is an ErrorEvent, let's convert it to an Error\n            const err = new Error('Texture loading error');\n            (err as any).event = e;\n\n            throw err;\n        });\n    }\n\n    // and in order to provide backward compatibility for older Pixi versions,\n    // we have to manually implement this method\n    // see https://github.com/pixijs/pixi.js/pull/6687/files\n\n    textureOptions.resourceOptions.autoLoad = false;\n\n    const texture = Texture.from(url, textureOptions);\n\n    if (texture.baseTexture.valid) {\n        return Promise.resolve(texture);\n    }\n\n    const resource = texture.baseTexture.resource as any;\n\n    // before Pixi v5.2.2, the Promise will not be rejected when loading has failed,\n    // we have to manually handle the \"error\" event\n    // see https://github.com/pixijs/pixi.js/pull/6374\n    resource._live2d_load ??= new Promise<Texture>((resolve, reject) => {\n        const errorHandler = (event: ErrorEvent) => {\n            (resource.source as HTMLImageElement).removeEventListener('error', errorHandler);\n\n            // convert the ErrorEvent to an Error\n            const err = new Error('Texture loading error');\n            (err as any).event = event;\n\n            reject(err);\n        };\n\n        (resource.source as HTMLImageElement).addEventListener('error', errorHandler);\n\n        (resource.load() as Promise<unknown>).then(() => resolve(texture)).catch(errorHandler);\n    });\n\n    return resource._live2d_load;\n}\n","import { ExpressionManager, InternalModel, ModelSettings, MotionManager } from '@/cubism-common';\nimport { Live2DLoader } from '@/factory/Live2DLoader';\nimport { Live2DModel, Live2DModelOptions } from '@/Live2DModel';\nimport { logger } from '@/utils';\nimport { Middleware, runMiddlewares } from '@/utils/middleware';\nimport {\n    createInternalModel,\n    jsonToSettings,\n    setupEssentials,\n    setupOptionals,\n    urlToJSON,\n    waitUntilReady,\n} from '@/factory/model-middlewares';\n\nexport interface Live2DFactoryOptions extends Live2DModelOptions {\n    /**\n     * String to use for crossOrigin properties on `<img>` elements when loading textures.\n     * @default undefined\n     */\n    crossOrigin?: string;\n\n    /**\n     * Callback invokes when the model has been loaded.\n     * @default undefined\n     */\n    onLoad?(): void;\n\n    /**\n     * Callback invokes when error occurs while loading the model.\n     * @default undefined\n     */\n    onError?(e: Error): void;\n}\n\n/**\n * The context transferred through the model creation middlewares.\n */\nexport interface Live2DFactoryContext {\n    source: any,\n    options: Live2DFactoryOptions;\n    live2dModel: Live2DModel;\n    internalModel?: InternalModel;\n    settings?: ModelSettings;\n}\n\n/**\n * Represents a Cubism version.\n */\nexport interface Live2DRuntime {\n    /**\n     * The version number. Higher version takes priority when matching the runtime.\n     */\n    version: number;\n\n    /**\n     * Checks if the source belongs to this runtime.\n     * @param source - Either a settings JSON object or a ModelSettings instance.\n     * @return True if the source belongs to this runtime.\n     */\n    test(source: any): boolean;\n\n    // TODO: remove\n    ready(): Promise<void>;\n\n    /**\n     * Checks if the data is a valid moc to create the core model.\n     * @param modelData - The moc content.\n     * @return True if the data is valid.\n     */\n    isValidMoc(modelData: ArrayBuffer): boolean;\n\n    /**\n     * Creates a ModelSettings.\n     * @param json - The settings JSON object.\n     * @return Created ModelSettings.\n     */\n    createModelSettings(json: JSONObject): ModelSettings;\n\n    /**\n     * Creates a core model.\n     * @param data - Content of the moc file.\n     * @return Created core model.\n     */\n    createCoreModel(data: ArrayBuffer): any;\n\n    /**\n     * Creates an InternalModel.\n     * @param coreModel - Core model that *must* belong to this runtime.\n     * @param settings - ModelSettings of this model.\n     * @param options - Options that will be passed to the InternalModel's constructor.\n     * @return Created InternalModel.\n     */\n    createInternalModel(coreModel: any, settings: ModelSettings, options?: Live2DFactoryOptions): InternalModel;\n\n    /**\n     * Creates a pose.\n     * @param coreModel - Core model that *must* belong to this runtime.\n     * @param data - Content of the pose file.\n     * @return Created pose.\n     */\n    createPose(coreModel: any, data: any): any;\n\n    /**\n     * Creates a physics.\n     * @param coreModel - Core model that *must* belong to this runtime.\n     * @param data - Content of the physics file.\n     * @return Created physics.\n     */\n    createPhysics(coreModel: any, data: any): any;\n}\n\n/**\n * Handles all the network load tasks.\n *\n * - Model creation: requested by {@link Live2DModel.from}.\n * - Motion loading: implements the load method of MotionManager.\n * - Expression loading: implements the load method of ExpressionManager.\n */\nexport class Live2DFactory {\n    /**\n     * All registered runtimes, sorted by versions in descending order.\n     */\n    static runtimes: Live2DRuntime[] = [];\n\n    static urlToJSON = urlToJSON;\n    static jsonToSettings = jsonToSettings;\n    static waitUntilReady = waitUntilReady;\n    static setupOptionals = setupOptionals;\n    static setupEssentials = setupEssentials;\n    static createInternalModel = createInternalModel;\n\n    /**\n     * Middlewares to run through when setting up a Live2DModel.\n     */\n    static live2DModelMiddlewares: Middleware<Live2DFactoryContext>[] = [\n        urlToJSON, jsonToSettings, waitUntilReady, setupOptionals, setupEssentials, createInternalModel,\n    ];\n\n    /**\n     * load tasks of each motion. The structure of each value in this map\n     * is the same as respective {@link MotionManager.definitions}.\n     */\n    static motionTasksMap = new WeakMap<MotionManager, Record<string, (Promise<any> | undefined)[]>>();\n\n    /**\n     * Load tasks of each expression.\n     */\n    static expressionTasksMap = new WeakMap<ExpressionManager, (Promise<any> | undefined)[]>();\n\n    /**\n     * Registers a Live2DRuntime.\n     */\n    static registerRuntime(runtime: Live2DRuntime) {\n        Live2DFactory.runtimes.push(runtime);\n\n        // higher version as higher priority\n        Live2DFactory.runtimes.sort((a, b) => b.version - a.version);\n    }\n\n    /**\n     * Finds a runtime that matches given source.\n     * @param source - Either a settings JSON object or a ModelSettings instance.\n     * @return The Live2DRuntime, or undefined if not found.\n     */\n    static findRuntime(source: any): Live2DRuntime | undefined {\n        for (const runtime of Live2DFactory.runtimes) {\n            if (runtime.test(source)) {\n                return runtime;\n            }\n        }\n    }\n\n    /**\n     * Sets up a Live2DModel, populating it with all defined resources.\n     * @param live2dModel - The Live2DModel instance.\n     * @param source - Can be one of: settings file URL, settings JSON object, ModelSettings instance.\n     * @param options - Options for the process.\n     * @return Promise that resolves when all resources have been loaded, rejects when error occurs.\n     */\n    static async setupLive2DModel<IM extends InternalModel>(live2dModel: Live2DModel<IM>, source: string | object | IM['settings'], options?: Live2DFactoryOptions): Promise<void> {\n        const textureLoaded = new Promise(resolve => live2dModel.once('textureLoaded', resolve));\n        const modelLoaded = new Promise(resolve => live2dModel.once('modelLoaded', resolve));\n\n        // because the \"ready\" event is supposed to be emitted after\n        // both the internal model and textures have been loaded,\n        // we should here wrap the emit() in a then() so it'll\n        // be executed after all the handlers of \"modelLoaded\" and \"textureLoaded\"\n        const readyEventEmitted = Promise.all([textureLoaded, modelLoaded]).then(() => live2dModel.emit('ready'));\n\n        await runMiddlewares(Live2DFactory.live2DModelMiddlewares, {\n            live2dModel,\n            source,\n            options: options || {},\n        });\n\n        // the \"load\" event should never be emitted before \"ready\"\n        await readyEventEmitted;\n\n        live2dModel.emit('load');\n    }\n\n    /**\n     * Loads a Motion and registers the task to {@link motionTasksMap}. The task will be automatically\n     * canceled when its owner - the MotionManager instance - has been destroyed.\n     * @param motionManager - MotionManager that owns this Motion.\n     * @param group - The motion group.\n     * @param index - Index in the motion group.\n     * @return Promise that resolves with the Motion, or with undefined if it can't be loaded.\n     */\n    static loadMotion<Motion, MotionSpec>(motionManager: MotionManager<Motion, MotionSpec>, group: string, index: number): Promise<Motion | undefined> {\n        // errors in this method are always handled\n        const handleError = (e: any) => motionManager.emit('motionLoadError', group, index, e);\n\n        try {\n            const definition = motionManager.definitions[group] ?. [index];\n\n            if (!definition) {\n                return Promise.resolve(undefined);\n            }\n\n            if (!motionManager.listeners('destroy').includes(Live2DFactory.releaseTasks)) {\n                motionManager.once('destroy', Live2DFactory.releaseTasks);\n            }\n\n            let tasks = Live2DFactory.motionTasksMap.get(motionManager);\n\n            if (!tasks) {\n                tasks = {};\n                Live2DFactory.motionTasksMap.set(motionManager, tasks);\n            }\n\n            let taskGroup = tasks[group];\n\n            if (!taskGroup) {\n                taskGroup = [];\n                tasks[group] = taskGroup;\n            }\n\n            const path = motionManager.getMotionFile(definition);\n\n            taskGroup[index] ??= Live2DLoader.load({\n                    url: path,\n                    settings: motionManager.settings,\n                    type: motionManager.motionDataType,\n                    target: motionManager,\n                })\n                .then(data => {\n                    const taskGroup = Live2DFactory.motionTasksMap.get(motionManager)?.[group];\n\n                    if (taskGroup) {\n                        delete taskGroup[index];\n                    }\n\n                    const motion = motionManager.createMotion(data, group, definition);\n\n                    motionManager.emit('motionLoaded', group, index, motion);\n\n                    return motion;\n                })\n                .catch(e => {\n                    logger.warn(motionManager.tag, `Failed to load motion: ${path}\\n`, e);\n                    handleError(e);\n                });\n\n            return taskGroup[index]!;\n        } catch (e) {\n            logger.warn(motionManager.tag, `Failed to load motion at \"${group}\"[${index}]\\n`, e);\n            handleError(e);\n        }\n\n        return Promise.resolve(undefined);\n    }\n\n    /**\n     * Loads an Expression and registers the task to {@link expressionTasksMap}. The task will be automatically\n     * canceled when its owner - the ExpressionManager instance - has been destroyed.\n     * @param expressionManager - ExpressionManager that owns this Expression.\n     * @param index - Index of the Expression.\n     * @return Promise that resolves with the Expression, or with undefined if it can't be loaded.\n     */\n    static loadExpression<Expression, ExpressionSpec>(expressionManager: ExpressionManager<Expression, ExpressionSpec>, index: number): Promise<Expression | undefined> {\n        // errors in this method are always handled\n        const handleError = (e: any) => expressionManager.emit('expressionLoadError', index, e);\n\n        try {\n            const definition = expressionManager.definitions[index];\n\n            if (!definition) {\n                return Promise.resolve(undefined);\n            }\n\n            if (!expressionManager.listeners('destroy').includes(Live2DFactory.releaseTasks)) {\n                expressionManager.once('destroy', Live2DFactory.releaseTasks);\n            }\n\n            let tasks = Live2DFactory.expressionTasksMap.get(expressionManager);\n\n            if (!tasks) {\n                tasks = [];\n                Live2DFactory.expressionTasksMap.set(expressionManager, tasks);\n            }\n\n            const path = expressionManager.getExpressionFile(definition);\n\n            tasks[index] ??= Live2DLoader.load({\n                    url: path,\n                    settings: expressionManager.settings,\n                    type: 'json',\n                    target: expressionManager,\n                })\n                .then(data => {\n                    const tasks = Live2DFactory.expressionTasksMap.get(expressionManager);\n\n                    if (tasks) {\n                        delete tasks[index];\n                    }\n\n                    const expression = expressionManager.createExpression(data, definition);\n\n                    expressionManager.emit('expressionLoaded', index, expression);\n\n                    return expression;\n                })\n                .catch(e => {\n                    logger.warn(expressionManager.tag, `Failed to load expression: ${path}\\n`, e);\n                    handleError(e);\n                });\n\n            return tasks[index]!;\n        } catch (e) {\n            logger.warn(expressionManager.tag, `Failed to load expression at [${index}]\\n`, e);\n            handleError(e);\n        }\n\n        return Promise.resolve(undefined);\n    }\n\n    static releaseTasks(this: MotionManager | ExpressionManager) {\n        if (this instanceof MotionManager) {\n            Live2DFactory.motionTasksMap.delete(this);\n        } else {\n            Live2DFactory.expressionTasksMap.delete(this);\n        }\n    }\n}\n\n(MotionManager.prototype as any)._loadMotion = function(this: MotionManager, group: string, index: number) {\n    return Live2DFactory.loadMotion(this, group, index);\n};\n\n(ExpressionManager.prototype as any)._loadExpression = function(this: ExpressionManager, index: number) {\n    return Live2DFactory.loadExpression(this, index);\n};\n","export * from './constants';\nexport * from './ExpressionManager';\nexport * from './FocusController';\nexport * from './ModelSettings';\nexport * from './MotionState';\nexport * from './MotionManager';\nexport * from './SoundManager';\nexport * from './InternalModel';\n","import { logger } from '@/utils';\nimport pull from 'lodash/pull';\n\nconst TAG = 'SoundManager';\nconst VOLUME = 0.5;\n\n/**\n * Manages all the sounds.\n */\nexport class SoundManager {\n    /**\n     * Audio elements playing or pending to play. Finished audios will be removed automatically.\n     */\n    static audios: HTMLAudioElement[] = [];\n\n    protected static _volume = VOLUME;\n\n    /**\n     * Global volume that applies to all the sounds.\n     */\n    static get volume(): number {\n        return this._volume;\n    }\n\n    static set volume(value: number) {\n        this._volume = (value > 1 ? 1 : value < 0 ? 0 : value) || 0;\n        this.audios.forEach(audio => (audio.volume = this._volume));\n    }\n\n    // TODO: return an ID?\n    /**\n     * Creates an audio element and adds it to the {@link audios}.\n     * @param file - URL of the sound file.\n     * @param onFinish - Callback invoked when the playback has finished.\n     * @param onError - Callback invoked when error occurs.\n     * @return Created audio element.\n     */\n    static add(file: string, onFinish?: () => void, onError?: (e: Error) => void): HTMLAudioElement {\n        const audio = new Audio(file);\n\n        audio.volume = this._volume;\n        audio.preload = 'auto';\n\n        audio.addEventListener('ended', () => {\n            this.dispose(audio);\n            onFinish?.();\n        });\n\n        audio.addEventListener('error', (e: ErrorEvent) => {\n            this.dispose(audio);\n            logger.warn(TAG, `Error occurred on \"${file}\"`, e.error);\n            onError?.(e.error);\n        });\n\n        this.audios.push(audio);\n\n        return audio;\n    }\n\n    /**\n     * Plays the sound.\n     * @param audio - An audio element.\n     * @return Promise that resolves when the audio is ready to play, rejects when error occurs.\n     */\n    static play(audio: HTMLAudioElement): Promise<void> {\n        return new Promise((resolve, reject) => {\n            // see https://developers.google.com/web/updates/2017/09/autoplay-policy-changes\n            audio.play()?.catch(e => {\n                audio.dispatchEvent(new ErrorEvent('error', { error: e }));\n                reject(e);\n            });\n\n            if (audio.readyState === audio.HAVE_ENOUGH_DATA) {\n                resolve();\n            } else {\n                audio.addEventListener('canplaythrough', resolve as () => void);\n            }\n        });\n    }\n\n    /**\n     * Disposes an audio element and removes it from {@link audios}.\n     * @param audio - An audio element.\n     */\n    static dispose(audio: HTMLAudioElement): void {\n        audio.pause();\n        audio.removeAttribute('src');\n\n        pull(this.audios, audio);\n    }\n\n    /**\n     * Destroys all managed audios.\n     */\n    static destroy(): void {\n        // dispose() removes given audio from the array, so the loop must be backward\n        for (let i = this.audios.length - 1; i >= 0; i--) {\n            this.dispose(this.audios[i]!);\n        }\n    }\n}\n","export const LOGICAL_WIDTH = 2;\nexport const LOGICAL_HEIGHT = 2;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","import { logger } from '@/utils';\n\n/**\n * Indicates the motion priority.\n */\nexport enum MotionPriority {\n    /** States that the model is currently not playing any motion. This priority cannot be applied to a motion. */\n    NONE,\n\n    /** Low priority, used when starting idle motions automatically. */\n    IDLE,\n\n    /** Medium priority. */\n    NORMAL,\n\n    /** High priority. Motions as this priority will always be played regardless of the current priority. */\n    FORCE\n}\n\n/**\n * Handles the state of a MotionManager.\n */\nexport class MotionState {\n    /**\n     * Tag for logging.\n     */\n    tag!: string;\n\n    /**\n     * When enabled, the states will be dumped to the logger when an exception occurs.\n     */\n    debug = false;\n\n    /**\n     * Priority of the current motion. Will be `MotionPriority.NONE` if there's no playing motion.\n     */\n    currentPriority = MotionPriority.NONE;\n\n    /**\n     * Priority of the reserved motion, which is still in loading and will be played once loaded.\n     * Will be `MotionPriority.NONE` if there's no reserved motion.\n     */\n    reservePriority = MotionPriority.NONE;\n\n    /**\n     * Group of current motion.\n     */\n    currentGroup?: string;\n\n    /**\n     * Index of current motion in its group.\n     */\n    currentIndex?: number;\n\n    /**\n     * Group of the reserved motion.\n     */\n    reservedGroup?: string;\n\n    /**\n     * Index of the reserved motion in its group.\n     */\n    reservedIndex?: number;\n\n    /**\n     * Group of the reserved idle motion.\n     */\n    reservedIdleGroup?: string;\n\n    /**\n     * Index of the reserved idle motion in its group.\n     */\n    reservedIdleIndex?: number;\n\n    /**\n     * Reserves the playback for a motion.\n     * @param group - The motion group.\n     * @param index - Index in the motion group.\n     * @param priority - The priority to be applied.\n     * @return True if the reserving has succeeded.\n     */\n    reserve(group: string, index: number, priority: MotionPriority): boolean {\n        if (priority <= MotionPriority.NONE) {\n            logger.log(this.tag, `Cannot start a motion with MotionPriority.NONE.`);\n            return false;\n        }\n\n        if (group === this.currentGroup && index === this.currentIndex) {\n            logger.log(this.tag, `Motion is already playing.`, this.dump(group, index));\n            return false;\n        }\n\n        if ((group === this.reservedGroup && index === this.reservedIndex) || (group === this.reservedIdleGroup && index === this.reservedIdleIndex)) {\n            logger.log(this.tag, `Motion is already reserved.`, this.dump(group, index));\n            return false;\n        }\n\n        if (priority === MotionPriority.IDLE) {\n            if (this.currentPriority !== MotionPriority.NONE) {\n                logger.log(this.tag, `Cannot start idle motion because another motion is playing.`, this.dump(group, index));\n                return false;\n            }\n\n            if (this.reservedIdleGroup !== undefined) {\n                logger.log(this.tag, `Cannot start idle motion because another idle motion has reserved.`, this.dump(group, index));\n                return false;\n            }\n\n            this.setReservedIdle(group, index);\n        } else {\n            if (priority < MotionPriority.FORCE) {\n                if (priority <= this.currentPriority) {\n                    logger.log(this.tag, 'Cannot start motion because another motion is playing as an equivalent or higher priority.', this.dump(group, index));\n                    return false;\n                }\n\n                if (priority <= this.reservePriority) {\n                    logger.log(this.tag, 'Cannot start motion because another motion has reserved as an equivalent or higher priority.', this.dump(group, index));\n                    return false;\n                }\n            }\n\n            this.setReserved(group, index, priority);\n        }\n\n        return true;\n    }\n\n    /**\n     * Requests the playback for a motion.\n     * @param motion - The Motion, can be undefined.\n     * @param group - The motion group.\n     * @param index - Index in the motion group.\n     * @param priority - The priority to be applied.\n     * @return True if the request has been approved, i.e. the motion is allowed to play.\n     */\n    start(motion: any, group: string, index: number, priority: MotionPriority): boolean {\n        if (priority === MotionPriority.IDLE) {\n            this.setReservedIdle(undefined, undefined);\n\n            if (this.currentPriority !== MotionPriority.NONE) {\n                logger.log(this.tag, 'Cannot start idle motion because another motion is playing.', this.dump(group, index));\n                return false;\n            }\n        } else {\n            if (group !== this.reservedGroup || index !== this.reservedIndex) {\n                logger.log(this.tag, 'Cannot start motion because another motion has taken the place.', this.dump(group, index));\n                return false;\n            }\n\n            this.setReserved(undefined, undefined, MotionPriority.NONE);\n        }\n\n        if (!motion) {\n            return false;\n        }\n\n        this.setCurrent(group, index, priority);\n\n        return true;\n    }\n\n    /**\n     * Notifies the motion playback has finished.\n     */\n    complete() {\n        this.setCurrent(undefined, undefined, MotionPriority.NONE);\n    }\n\n    /**\n     * Sets the current motion.\n     */\n    setCurrent(group: string | undefined, index: number | undefined, priority: MotionPriority) {\n        this.currentPriority = priority;\n        this.currentGroup = group;\n        this.currentIndex = index;\n    }\n\n    /**\n     * Sets the reserved motion.\n     */\n    setReserved(group: string | undefined, index: number | undefined, priority: MotionPriority) {\n        this.reservePriority = priority;\n        this.reservedGroup = group;\n        this.reservedIndex = index;\n    }\n\n    /**\n     * Sets the reserved idle motion.\n     */\n    setReservedIdle(group: string | undefined, index: number | undefined) {\n        this.reservedIdleGroup = group;\n        this.reservedIdleIndex = index;\n    }\n\n    /**\n     * Checks if a Motion is currently playing or has reserved.\n     * @return True if active.\n     */\n    isActive(group: string, index: number): boolean {\n        return (group === this.currentGroup && index === this.currentIndex)\n            || (group === this.reservedGroup && index === this.reservedIndex)\n            || (group === this.reservedIdleGroup && index === this.reservedIdleIndex);\n    }\n\n    /**\n     * Resets the state.\n     */\n    reset() {\n        this.setCurrent(undefined, undefined, MotionPriority.NONE);\n\n        // make sure the reserved motions (if existing) won't start when they are loaded\n        this.setReserved(undefined, undefined, MotionPriority.NONE);\n        this.setReservedIdle(undefined, undefined);\n    }\n\n    /**\n     * Checks if an idle motion should be requests to play.\n     */\n    shouldRequestIdleMotion(): boolean {\n        return this.currentGroup === undefined && this.reservedIdleGroup === undefined;\n    }\n\n    /**\n     * Checks if the model's expression should be overridden by the motion.\n     */\n    shouldOverrideExpression(): boolean {\n        return this.currentPriority > MotionPriority.IDLE;\n    }\n\n    /**\n     * Dumps the state for debugging.\n     */\n    dump(requestedGroup?: string, requestedIndex?: number): string {\n        if (this.debug) {\n            const keys: (keyof this)[] = [\n                'currentPriority',\n                'reservePriority',\n                'currentGroup',\n                'currentIndex',\n                'reservedGroup',\n                'reservedIndex',\n                'reservedIdleGroup',\n                'reservedIdleIndex',\n            ];\n            return `\\n<Requested> group = \"${requestedGroup}\", index = ${requestedIndex}\\n` + keys.map(key => '[' + key + '] ' + this[key]).join('\\n');\n        }\n        return '';\n    }\n}\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","import { ModelSettings } from '@/cubism-common/ModelSettings';\nimport { MotionManagerOptions } from '@/cubism-common/MotionManager';\nimport { logger } from '@/utils';\nimport { EventEmitter } from '@pixi/utils';\n\n/**\n * Abstract expression manager.\n * @emits {@link ExpressionManagerEvents}\n */\nexport abstract class ExpressionManager<Expression = any, ExpressionSpec = any> extends EventEmitter {\n    /**\n     * Tag for logging.\n     */\n    tag: string;\n\n    /**\n     * Expression definitions copied from ModelSettings.\n     */\n    abstract readonly definitions: ExpressionSpec[];\n\n    /**\n     * The ModelSettings reference.\n     */\n    readonly settings: ModelSettings;\n\n    /**\n     * The Expressions. The structure is the same as {@link definitions}, initially there's only\n     * an empty array, which means all expressions will be `undefined`. When an Expression has\n     * been loaded, it'll fill the place in which it should be; when it fails to load,\n     * the place will be filled with `null`.\n     */\n    expressions: (Expression | null | undefined)[] = [];\n\n    /**\n     * An empty Expression to reset all the expression parameters.\n     */\n    defaultExpression!: Expression;\n\n    /**\n     * Current Expression. This will not be overwritten by the {@link defaultExpression}.\n     */\n    currentExpression!: Expression;\n\n    /**\n     * The pending Expression.\n     */\n    reserveExpressionIndex = -1;\n\n    /**\n     * Flags the instance has been destroyed.\n     */\n    destroyed = false;\n\n    protected constructor(settings: ModelSettings, options?: MotionManagerOptions) {\n        super();\n        this.settings = settings;\n        this.tag = `ExpressionManager(${settings.name})`;\n    }\n\n    /**\n     * Should be called in the constructor of derived class.\n     */\n    protected init() {\n        this.defaultExpression = this.createExpression({}, undefined);\n        this.currentExpression = this.defaultExpression;\n\n        this.stopAllExpressions();\n    }\n\n    /**\n     * Loads an Expression. Errors in this method will not be thrown,\n     * but be emitted with an \"expressionLoadError\" event.\n     * @param index - Index of the expression in definitions.\n     * @return Promise that resolves with the Expression, or with undefined if it can't be loaded.\n     * @emits {@link ExpressionManagerEvents.expressionLoaded}\n     * @emits {@link ExpressionManagerEvents.expressionLoadError}\n     */\n    protected async loadExpression(index: number): Promise<Expression | undefined> {\n        if (!this.definitions[index]) {\n            logger.warn(this.tag, `Undefined expression at [${index}]`);\n            return undefined;\n        }\n\n        if (this.expressions[index] === null) {\n            logger.warn(this.tag, `Cannot set expression at [${index}] because it's already failed in loading.`);\n            return undefined;\n        }\n\n        if (this.expressions[index]) {\n            return this.expressions[index] as Expression;\n        }\n\n        const expression = await this._loadExpression(index);\n\n        this.expressions[index] = expression;\n\n        return expression;\n    }\n\n    /**\n     * Loads the Expression. Will be implemented by Live2DFactory.\n     * @ignore\n     */\n    private _loadExpression(index: number): Promise<Expression | undefined> {\n        throw new Error('Not implemented.');\n    }\n\n    /**\n     * Sets a random Expression that differs from current one.\n     * @return Promise that resolves with true if succeeded, with false otherwise.\n     */\n    async setRandomExpression(): Promise<boolean> {\n        if (this.definitions.length) {\n            const availableIndices = [];\n\n            for (let i = 0; i < this.definitions.length; i++) {\n                if (\n                    this.expressions[i] !== null\n                    && this.expressions[i] !== this.currentExpression\n                    && i !== this.reserveExpressionIndex\n                ) {\n                    availableIndices.push(i);\n                }\n            }\n\n            if (availableIndices.length) {\n                const index = Math.floor(Math.random() * availableIndices.length);\n\n                return this.setExpression(index);\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Resets model's expression using {@link defaultExpression}.\n     */\n    resetExpression(): void {\n        this._setExpression(this.defaultExpression);\n    }\n\n    /**\n     * Restores model's expression to {@link currentExpression}.\n     */\n    restoreExpression(): void {\n        this._setExpression(this.currentExpression);\n    }\n\n    /**\n     * Sets an Expression.\n     * @param index - Either the index, or the name of the expression.\n     * @return Promise that resolves with true if succeeded, with false otherwise.\n     */\n    async setExpression(index: number | string): Promise<boolean> {\n        if (typeof index !== 'number') {\n            index = this.getExpressionIndex(index);\n        }\n\n        if (!(index > -1 && index < this.definitions.length)) {\n            return false;\n        }\n\n        if (index === this.expressions.indexOf(this.currentExpression)) {\n            return false;\n        }\n\n        this.reserveExpressionIndex = index;\n\n        const expression = await this.loadExpression(index);\n\n        if (!expression || this.reserveExpressionIndex !== index) {\n            return false;\n        }\n\n        this.reserveExpressionIndex = -1;\n        this.currentExpression = expression;\n        this._setExpression(expression);\n\n        return true;\n    }\n\n    /**\n     * Updates parameters of the core model.\n     * @return True if the parameters are actually updated.\n     */\n    update(model: object, now: DOMHighResTimeStamp) {\n        if (!this.isFinished()) {\n            return this.updateParameters(model, now);\n        }\n\n        return false;\n    }\n\n    /**\n     * Destroys the instance.\n     * @emits {@link ExpressionManagerEvents.destroy}\n     */\n    destroy() {\n        this.destroyed = true;\n        this.emit('destroy');\n\n        const self = this as Mutable<Partial<this>>;\n        self.definitions = undefined;\n        self.expressions = undefined;\n    }\n\n    /**\n     * Checks if the expression playback has finished.\n     */\n    abstract isFinished(): boolean;\n\n    /**\n     * Retrieves the expression's index by its name.\n     * @return The index. `-1` if not found.\n     */\n    abstract getExpressionIndex(name: string): number;\n\n    /**\n     * Retrieves the expression's file path by its definition.\n     * @return The file path extracted from given definition. Not resolved.\n     */\n    abstract getExpressionFile(definition: ExpressionSpec): string;\n\n    /**\n     * Creates an Expression from the data.\n     * @param data - Content of the expression file.\n     * @param definition - The expression definition. Can be undefined when creating the {@link defaultExpression}.\n     * @return The created Expression.\n     */\n    abstract createExpression(data: JSONObject, definition: ExpressionSpec | undefined): Expression;\n\n    /**\n     * Applies the Expression to the model.\n     */\n    protected abstract _setExpression(motion: Expression): number;\n\n    /**\n     * Cancels expression playback.\n     */\n    protected abstract stopAllExpressions(): void;\n\n    /**\n     * Updates parameters of the core model.\n     * @return True if the parameters are actually updated.\n     */\n    protected abstract updateParameters(model: object, now: DOMHighResTimeStamp): boolean;\n}\n","import { folderName } from '@/utils';\nimport { url } from '@pixi/utils';\n\n/**\n * Parses, and provides access to the settings JSON.\n */\nexport abstract class ModelSettings {\n    json: JSONObject;\n\n    /**\n     * The model's name, typically used for displaying or logging. By default it's inferred from\n     * the URL by taking the folder name (the second to last component). In Cubism 2 it'll be overwritten\n     * by the `name` field of settings JSON.\n     */\n    name: string;\n\n    /**\n     * URL of the model settings file, used to resolve paths of the resource files defined in settings.\n     * This typically ends with `.model.json` in Cubism 2 and `.model3.json` in Cubism 4.\n     */\n    url: string;\n\n    /**\n     * Relative path of he moc file, typically ends with `.moc` in Cubism 2 and `.moc3` in Cubism 4.\n     */\n    abstract moc: string;\n\n    /**\n     * Relative paths of the texture images.\n     */\n    abstract textures: string[];\n\n    /**\n     * Relative path of the pose file.\n     */\n    pose?: string;\n\n    /**\n     * Relative path of the physics file.\n     */\n    physics?: string;\n\n    /**\n     * @param json - The settings JSON object.\n     * @param json.url - The `url` field must be defined to specify the settings file's URL.\n     */\n    protected constructor(json: JSONObject & { url: string }) {\n        this.json = json;\n\n        let url = (json as any).url;\n\n        if (typeof url !== 'string') {\n            // this is not allowed because it'll typically result in errors, including a\n            // fatal error - an OOM that crashes the browser while initializing this cubism2 model,\n            // I'm not kidding!\n            throw new TypeError('The `url` field in settings JSON must be defined as a string.');\n        }\n\n        this.url = url;\n\n        // set default name to folder's name\n        this.name = folderName(this.url);\n    }\n\n    /**\n     * Resolves a relative path using the {@link url}. This is used to resolve the resource files\n     * defined in the settings.\n     * @param path - Relative path.\n     * @return Resolved path.\n     */\n    resolveURL(path: string): string {\n        return url.resolve(this.url, path);\n    }\n\n    /**\n     * Replaces the resource files by running each file through the `replacer`.\n     * @param replacer - Invoked with two arguments: `(file, path)`, where `file` is the file definition,\n     * and `path` is its property path in the ModelSettings instance. A string must be returned to be the replacement.\n     *\n     * ```js\n     * modelSettings.replaceFiles((file, path) => {\n     *     // file = \"foo.moc\", path = \"moc\"\n     *     // file = \"foo.png\", path = \"textures[0]\"\n     *     // file = \"foo.mtn\", path = \"motions.idle[0].file\"\n     *     // file = \"foo.motion3.json\", path = \"motions.idle[0].File\"\n     *\n     *     return \"bar/\" + file;\n     * });\n     * ```\n     */\n    replaceFiles(replacer: (file: string, path: string) => string) {\n        this.moc = replacer(this.moc, 'moc');\n\n        if (this.pose !== undefined) {\n            (this.pose = replacer(this.pose, 'pose'));\n        }\n\n        if (this.physics !== undefined) {\n            (this.physics = replacer(this.physics, 'physics'));\n        }\n\n        for (let i = 0; i < this.textures.length; i++) {\n            this.textures[i] = replacer(this.textures[i]!, `textures[${i}]`);\n        }\n    };\n\n    /**\n     * Retrieves all resource files defined in the settings.\n     * @return A flat array of the paths of all resource files.\n     *\n     * ```js\n     * modelSettings.getDefinedFiles();\n     * // returns: [\"foo.moc\", \"foo.png\", ...]\n     * ```\n     */\n    getDefinedFiles(): string[] {\n        const files: string[] = [];\n\n        this.replaceFiles((file: string) => {\n            files.push(file);\n\n            return file;\n        });\n\n        return files;\n    }\n\n    /**\n     * Validates that the files defined in the settings exist in given files. Each file will be\n     * resolved by {@link resolveURL} before comparison.\n     * @param files - A flat array of file paths.\n     * @return All the files which are defined in the settings and also exist in given files,\n     * *including the optional files*.\n     * @throws Error if any *essential* file is defined in settings but not included in given files.\n     */\n    validateFiles(files: string[]): string[] {\n        const assertFileExists = (expectedFile: string, shouldThrow: boolean): boolean => {\n            const actualPath = this.resolveURL(expectedFile);\n\n            if (!files.includes(actualPath)) {\n                if (shouldThrow) {\n                    throw new Error(`File \"${expectedFile}\" is defined in settings, but doesn't exist in given files`);\n                }\n\n                return false;\n            }\n\n            return true;\n        };\n\n        const essentialFiles = [this.moc, ...this.textures];\n\n        essentialFiles.forEach(texture => assertFileExists(texture, true));\n\n        const definedFiles = this.getDefinedFiles();\n\n        return definedFiles.filter(file => assertFileExists(file, false));\n    }\n}\n","import { config } from '@/config';\nimport { ExpressionManager } from '@/cubism-common/ExpressionManager';\nimport { ModelSettings } from '@/cubism-common/ModelSettings';\nimport { MotionPriority, MotionState } from '@/cubism-common/MotionState';\nimport { SoundManager } from '@/cubism-common/SoundManager';\nimport { logger } from '@/utils';\nimport { EventEmitter } from '@pixi/utils';\n\nexport interface MotionManagerOptions {\n    /**\n     * How to preload the motions.\n     * @default {@link MotionPreloadStrategy.NONE}\n     */\n    motionPreload?: MotionPreloadStrategy;\n\n    /**\n     * Specifies the idle motion group.\n     * @default \"idle\" in Cubism 2 and \"Idle\" in Cubism 4.\n     */\n    idleMotionGroup?: string;\n}\n\n/**\n * Indicates how the motions will be preloaded.\n */\nexport enum MotionPreloadStrategy {\n    /** Preload all the motions. */\n    ALL = 'ALL',\n\n    /** Preload only the idle motions. */\n    IDLE = 'IDLE',\n\n    /** No preload. */\n    NONE = 'NONE',\n}\n\n/**\n * Handles the motion playback.\n * @emits {@link MotionManagerEvents}\n */\nexport abstract class MotionManager<Motion = any, MotionSpec = any> extends EventEmitter {\n    /**\n     * Tag for logging.\n     */\n    tag: string;\n\n    /**\n     * Motion definitions copied from ModelSettings.\n     */\n    abstract readonly definitions: Partial<Record<string, MotionSpec[]>>;\n\n    /**\n     * Motion groups with particular internal usages. Currently there's only the `idle` field,\n     * which specifies the actual name of the idle motion group, so the idle motions\n     * can be correctly found from the settings JSON of various Cubism versions.\n     */\n    abstract readonly groups: { idle: string };\n\n    /**\n     * Indicates the content type of the motion files, varies in different Cubism versions.\n     * This will be used as `xhr.responseType`.\n     */\n    abstract readonly motionDataType: 'json' | 'arraybuffer';\n\n    /**\n     * Can be undefined if the settings defines no expression.\n     */\n    abstract expressionManager?: ExpressionManager;\n\n    /**\n     * The ModelSettings reference.\n     */\n    readonly settings: ModelSettings;\n\n    /**\n     * The Motions. The structure is the same as {@link definitions}, initially each group contains\n     * an empty array, which means all motions will be `undefined`. When a Motion has been loaded,\n     * it'll fill the place in which it should be; when it fails to load, the place will be filled\n     * with `null`.\n     */\n    motionGroups: Partial<Record<string, (Motion | undefined | null)[]>> = {};\n\n    /**\n     * Maintains the state of this MotionManager.\n     */\n    state = new MotionState();\n\n    /**\n     * Audio element of the current motion if a sound file is defined with it.\n     */\n    currentAudio?: HTMLAudioElement;\n\n    /**\n     * Flags there's a motion playing.\n     */\n    playing = false;\n\n    /**\n     * Flags the instances has been destroyed.\n     */\n    destroyed = false;\n\n    protected constructor(settings: ModelSettings, options?: MotionManagerOptions) {\n        super();\n        this.settings = settings;\n        this.tag = `MotionManager(${settings.name})`;\n        this.state.tag = this.tag;\n    }\n\n    /**\n     * Should be called in the constructor of derived class.\n     */\n    protected init(options?: MotionManagerOptions) {\n        if (options?.idleMotionGroup) {\n            this.groups.idle = options.idleMotionGroup;\n        }\n\n        this.setupMotions(options);\n        this.stopAllMotions();\n    }\n\n    /**\n     * Sets up motions from the definitions, and preloads them according to the preload strategy.\n     */\n    protected setupMotions(options?: MotionManagerOptions): void {\n        for (const group of Object.keys(this.definitions)) {\n            // init with the same structure of definitions\n            this.motionGroups[group] = [];\n        }\n\n        // preload motions\n\n        let groups;\n\n        switch (options?.motionPreload) {\n            case MotionPreloadStrategy.NONE:\n                return;\n\n            case MotionPreloadStrategy.ALL:\n                groups = Object.keys(this.definitions);\n                break;\n\n            case MotionPreloadStrategy.IDLE:\n            default:\n                groups = [this.groups.idle];\n                break;\n        }\n\n        for (const group of groups) {\n            if (this.definitions[group]) {\n                for (let i = 0; i < this.definitions[group]!.length; i++) {\n                    this.loadMotion(group, i).then();\n                }\n            }\n        }\n    }\n\n    /**\n     * Loads a Motion in a motion group. Errors in this method will not be thrown,\n     * but be emitted with a \"motionLoadError\" event.\n     * @param group - The motion group.\n     * @param index - Index in the motion group.\n     * @return Promise that resolves with the Motion, or with undefined if it can't be loaded.\n     * @emits {@link MotionManagerEvents.motionLoaded}\n     * @emits {@link MotionManagerEvents.motionLoadError}\n     */\n    async loadMotion(group: string, index: number): Promise<Motion | undefined> {\n        if (!this.definitions[group] ?. [index]) {\n            logger.warn(this.tag, `Undefined motion at \"${group}\"[${index}]`);\n            return undefined;\n        }\n\n        if (this.motionGroups[group]![index] === null) {\n            logger.warn(this.tag, `Cannot start motion at \"${group}\"[${index}] because it's already failed in loading.`);\n            return undefined;\n        }\n\n        if (this.motionGroups[group]![index]) {\n            return this.motionGroups[group]![index]!;\n        }\n\n        const motion = await this._loadMotion(group, index);\n\n        if (this.destroyed) {\n            return;\n        }\n\n        this.motionGroups[group]![index] = motion ?? null;\n\n        return motion;\n    }\n\n    // TODO: remove\n    /**\n     * Loads the Motion. Will be implemented by Live2DFactory.\n     * @ignore\n     */\n    private _loadMotion(group: string, index: number): Promise<Motion | undefined> {\n        throw new Error('Not implemented.');\n    }\n\n    /**\n     * Starts a motion as given priority.\n     * @param group - The motion group.\n     * @param index - Index in the motion group.\n     * @param priority - The priority to be applied.\n     * @return Promise that resolves with true if the motion is successfully started, with false otherwise.\n     */\n    async startMotion(group: string, index: number, priority = MotionPriority.NORMAL): Promise<boolean> {\n        if (!this.state.reserve(group, index, priority)) {\n            return false;\n        }\n\n        const definition = this.definitions[group]?.[index];\n\n        if (!definition) {\n            return false;\n        }\n\n        if (this.currentAudio) {\n            // TODO: reuse the audio?\n            SoundManager.dispose(this.currentAudio);\n        }\n\n        let audio: HTMLAudioElement | undefined;\n\n        if (config.sound) {\n            const soundURL = this.getSoundFile(definition);\n\n            if (soundURL) {\n                try {\n                    // start to load the audio\n                    audio = SoundManager.add(\n                        this.settings.resolveURL(soundURL),\n                        () => this.currentAudio = undefined,\n                        () => this.currentAudio = undefined,\n                    );\n\n                    this.currentAudio = audio;\n                } catch (e) {\n                    logger.warn(this.tag, 'Failed to create audio', soundURL, e);\n                }\n            }\n        }\n\n        const motion = await this.loadMotion(group, index);\n\n        if (audio) {\n            const readyToPlay = SoundManager.play(audio)\n                .catch(e => logger.warn(this.tag, 'Failed to play audio', audio!.src, e));\n\n            if (config.motionSync) {\n                // wait until the audio is ready\n                await readyToPlay;\n            }\n        }\n\n        if (!this.state.start(motion, group, index, priority)) {\n            if (audio) {\n                SoundManager.dispose(audio);\n                this.currentAudio = undefined;\n            }\n\n            return false;\n        }\n\n        logger.log(this.tag, 'Start motion:', this.getMotionName(definition));\n\n        this.emit('motionStart', group, index, audio);\n\n        if (this.state.shouldOverrideExpression()) {\n            this.expressionManager && this.expressionManager.resetExpression();\n        }\n\n        this.playing = true;\n\n        this._startMotion(motion!);\n\n        return true;\n    }\n\n    /**\n     * Starts a random Motion as given priority.\n     * @param group - The motion group.\n     * @param priority - The priority to be applied.\n     * @return Promise that resolves with true if the motion is successfully started, with false otherwise.\n     */\n    async startRandomMotion(group: string, priority?: MotionPriority): Promise<boolean> {\n        const groupDefs = this.definitions[group];\n\n        if (groupDefs?.length) {\n            const availableIndices = [];\n\n            for (let i = 0; i < groupDefs!.length; i++) {\n                if (this.motionGroups[group]![i] !== null && !this.state.isActive(group, i)) {\n                    availableIndices.push(i);\n                }\n            }\n\n            if (availableIndices.length) {\n                const index = Math.floor(Math.random() * availableIndices.length);\n\n                return this.startMotion(group, availableIndices[index]!, priority);\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Stops all playing motions as well as the sound.\n     */\n    stopAllMotions(): void {\n        this._stopAllMotions();\n\n        this.state.reset();\n\n        if (this.currentAudio) {\n            SoundManager.dispose(this.currentAudio);\n            this.currentAudio = undefined;\n        }\n    }\n\n    /**\n     * Updates parameters of the core model.\n     * @param model - The core model.\n     * @param now - Current time in milliseconds.\n     * @return True if the parameters have been actually updated.\n     */\n    update(model: object, now: DOMHighResTimeStamp): boolean {\n        if (this.isFinished()) {\n            if (this.playing) {\n                this.playing = false;\n                this.emit('motionFinish');\n            }\n\n            if (this.state.shouldOverrideExpression()) {\n                this.expressionManager?.restoreExpression();\n            }\n\n            this.state.complete();\n\n            if (this.state.shouldRequestIdleMotion()) {\n                // noinspection JSIgnoredPromiseFromCall\n                this.startRandomMotion(this.groups.idle, MotionPriority.IDLE);\n            }\n        }\n\n        let updated = this.updateParameters(model, now);\n\n        updated = this.expressionManager?.update(model, now) || updated;\n\n        return updated;\n    }\n\n    /**\n     * Destroys the instance.\n     * @emits {@link MotionManagerEvents.destroy}\n     */\n    destroy() {\n        this.destroyed = true;\n        this.emit('destroy');\n\n        this.stopAllMotions();\n        this.expressionManager?.destroy();\n\n        const self = this as Mutable<Partial<this>>;\n        self.definitions = undefined;\n        self.motionGroups = undefined;\n    }\n\n    /**\n     * Checks if the motion playback has finished.\n     */\n    abstract isFinished(): boolean;\n\n    /**\n     * Creates a Motion from the data.\n     * @param data - Content of the motion file. The format must be consistent with {@link motionDataType}.\n     * @param group - The motion group.\n     * @param definition - The motion definition.\n     * @return The created Motion.\n     */\n    abstract createMotion(data: ArrayBuffer | JSONObject, group: string, definition: MotionSpec): Motion;\n\n    /**\n     * Retrieves the motion's file path by its definition.\n     * @return The file path extracted from given definition. Not resolved.\n     */\n    abstract getMotionFile(definition: MotionSpec): string;\n\n    /**\n     * Retrieves the motion's name by its definition.\n     * @return The motion's name.\n     */\n    protected abstract getMotionName(definition: MotionSpec): string;\n\n    /**\n     * Retrieves the motion's sound file by its definition.\n     * @return The motion's sound file, can be undefined.\n     */\n    protected abstract getSoundFile(definition: MotionSpec): string | undefined;\n\n    /**\n     * Starts the Motion.\n     */\n    protected abstract _startMotion(motion: Motion, onFinish?: (motion: Motion) => void): number;\n\n    /**\n     * Stops all playing motions.\n     */\n    protected abstract _stopAllMotions(): void;\n\n    /**\n     * Updates parameters of the core model.\n     * @param model - The core model.\n     * @param now - Current time in milliseconds.\n     * @return True if the parameters have been actually updated.\n     */\n    protected abstract updateParameters(model: object, now: DOMHighResTimeStamp): boolean;\n}\n","import { LOGICAL_HEIGHT, LOGICAL_WIDTH } from '@/cubism-common/constants';\nimport { FocusController } from '@/cubism-common/FocusController';\nimport { ModelSettings } from '@/cubism-common/ModelSettings';\nimport { MotionManager, MotionManagerOptions } from '@/cubism-common/MotionManager';\nimport { Matrix } from '@pixi/math';\nimport { EventEmitter } from '@pixi/utils';\n\n/**\n * Common layout definition shared between all Cubism versions.\n */\nexport interface CommonLayout {\n    centerX?: number;\n    centerY?: number;\n    x?: number;\n    y?: number;\n    width?: number;\n    height?: number;\n    top?: number;\n    bottom?: number;\n    left?: number;\n    right?: number;\n}\n\n/**\n * Common hit area definition shared between all Cubism versions.\n */\nexport interface CommonHitArea {\n    id: string;\n    name: string;\n    index: number;\n}\n\nexport interface Bounds {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport interface InternalModelOptions extends MotionManagerOptions {}\n\nconst tempBounds: Bounds = { x: 0, y: 0, width: 0, height: 0 };\n\n/**\n * A wrapper that manages the states of a Live2D core model, and delegates all operations to it.\n * @emits {@link InternalModelEvents}\n */\nexport abstract class InternalModel extends EventEmitter {\n    /**\n     * The managed Live2D core model.\n     */\n    abstract readonly coreModel: object;\n\n    abstract readonly settings: ModelSettings;\n\n    focusController = new FocusController();\n\n    abstract motionManager: MotionManager;\n\n    pose?: any;\n    physics?: any;\n\n    /**\n     * Original canvas width of the model. Note this doesn't represent the model's real size,\n     * as the model can overflow from its canvas.\n     */\n    readonly originalWidth: number = 0;\n\n    /**\n     * Original canvas height of the model. Note this doesn't represent the model's real size,\n     * as the model can overflow from its canvas.\n     */\n    readonly originalHeight: number = 0;\n\n    /**\n     * Canvas width of the model, scaled by the `width` of the model's layout.\n     */\n    readonly width: number = 0;\n\n    /**\n     * Canvas height of the model, scaled by the `height` of the model's layout.\n     */\n    readonly height: number = 0;\n\n    /**\n     * Local transformation, calculated from the model's layout.\n     */\n    localTransform = new Matrix();\n\n    /**\n     * The final matrix to draw the model.\n     */\n    drawingMatrix = new Matrix();\n\n    // TODO: change structure\n    /**\n     * The hit area definitions, keyed by their names.\n     */\n    hitAreas: Record<string, CommonHitArea> = {};\n\n    /**\n     * Flags whether `gl.UNPACK_FLIP_Y_WEBGL` should be enabled when binding the textures.\n     */\n    textureFlipY = false;\n\n    /**\n     * WebGL viewport when drawing the model. The format is `[x, y, width, height]`.\n     */\n    viewport: [number, number, number, number] = [0, 0, 0, 0];\n\n    /**\n     * Flags this instance has been destroyed.\n     */\n    destroyed = false;\n\n    /**\n     * Should be called in the constructor of derived class.\n     */\n    protected init() {\n        this.setupLayout();\n        this.setupHitAreas();\n    }\n\n    /**\n     * Sets up the model's size and local transform by the model's layout.\n     */\n    protected setupLayout() {\n        // cast `this` to be mutable\n        const self = this as Mutable<this>;\n\n        const size = this.getSize();\n\n        self.originalWidth = size[0];\n        self.originalHeight = size[1];\n\n        const layout = Object.assign(\n            {\n                width: LOGICAL_WIDTH,\n                height: LOGICAL_HEIGHT,\n            },\n            this.getLayout(),\n        );\n\n        this.localTransform.scale(layout.width / LOGICAL_WIDTH, layout.height / LOGICAL_HEIGHT);\n\n        self.width = this.originalWidth * this.localTransform.a;\n        self.height = this.originalHeight * this.localTransform.d;\n\n        // this calculation differs from Live2D SDK...\n        const offsetX = (layout.x !== undefined && layout.x - layout.width / 2)\n            || (layout.centerX !== undefined && layout.centerX)\n            || (layout.left !== undefined && layout.left - layout.width / 2)\n            || (layout.right !== undefined && layout.right + layout.width / 2)\n            || 0;\n\n        const offsetY = (layout.y !== undefined && layout.y - layout.height / 2)\n            || (layout.centerY !== undefined && layout.centerY)\n            || (layout.top !== undefined && layout.top - layout.height / 2)\n            || (layout.bottom !== undefined && layout.bottom + layout.height / 2)\n            || 0;\n\n        this.localTransform.translate(this.width * offsetX, -this.height * offsetY);\n    }\n\n    /**\n     * Sets up the hit areas by their definitions in settings.\n     */\n    protected setupHitAreas() {\n        const definitions = this.getHitAreaDefs().filter(hitArea => hitArea.index >= 0);\n\n        for (const def of definitions) {\n            this.hitAreas[def.name] = def;\n        }\n    }\n\n    /**\n     * Hit-test on the model.\n     * @param x - Position in model canvas.\n     * @param y - Position in model canvas.\n     * @return The names of the *hit* hit areas. Can be empty if none is hit.\n     */\n    hitTest(x: number, y: number): string[] {\n        return Object.keys(this.hitAreas).filter(hitAreaName => this.isHit(hitAreaName, x, y));\n    }\n\n    /**\n     * Hit-test for a single hit area.\n     * @param hitAreaName - The hit area's name.\n     * @param x - Position in model canvas.\n     * @param y - Position in model canvas.\n     * @return True if hit.\n     */\n    isHit(hitAreaName: string, x: number, y: number): boolean {\n        if (!this.hitAreas[hitAreaName]) {\n            return false;\n        }\n\n        const drawIndex = this.hitAreas[hitAreaName]!.index;\n\n        const bounds = this.getDrawableBounds(drawIndex, tempBounds);\n\n        return bounds.x <= x && x <= bounds.x + bounds.width && bounds.y <= y && y <= bounds.y + bounds.height;\n    }\n\n    /**\n     * Gets a drawable's bounds.\n     * @param index - Index of the drawable.\n     * @param bounds - Object to store the output values.\n     * @return The bounds in model canvas space.\n     */\n    getDrawableBounds(index: number, bounds?: Bounds): Bounds {\n        const vertices = this.getDrawableVertices(index);\n\n        let left = vertices[0]!;\n        let right = vertices[0]!;\n        let top = vertices[1]!;\n        let bottom = vertices[1]!;\n\n        for (let i = 0; i < vertices.length; i += 2) {\n            const vx = vertices[i]!;\n            const vy = vertices[i + 1]!;\n\n            left = Math.min(vx, left);\n            right = Math.max(vx, right);\n            top = Math.min(vy, top);\n            bottom = Math.max(vy, bottom);\n        }\n\n        bounds ??= {} as Bounds;\n\n        bounds.x = left;\n        bounds.y = top;\n        bounds.width = right - left;\n        bounds.height = bottom - top;\n\n        return bounds;\n    }\n\n    /**\n     * Updates the model's transform.\n     * @param transform - The world transform.\n     */\n    updateTransform(transform: Matrix) {\n        this.drawingMatrix.copyFrom(transform).append(this.localTransform);\n    }\n\n    /**\n     * Updates the model's parameters.\n     * @param dt - Elapsed time in milliseconds from last frame.\n     * @param now - Current time in milliseconds.\n     */\n    update(dt: DOMHighResTimeStamp, now: DOMHighResTimeStamp): void {\n        this.focusController.update(dt);\n    };\n\n    /**\n     * Destroys the model and all related resources.\n     * @emits {@link InternalModelEvents.destroy | destroy}\n     */\n    destroy() {\n        this.destroyed = true;\n        this.emit('destroy');\n\n        this.motionManager.destroy();\n        (this as Partial<this>).motionManager = undefined;\n    }\n\n    /**\n     * Gets all the hit area definitions.\n     * @return Normalized definitions.\n     */\n    protected abstract getHitAreaDefs(): CommonHitArea[];\n\n    /**\n     * Gets the model's original canvas size.\n     * @return `[width, height]`\n     */\n    protected abstract getSize(): [number, number];\n\n    /**\n     * Gets the layout definition.\n     * @return Normalized definition.\n     */\n    protected abstract getLayout(): CommonLayout;\n\n    /**\n     * Gets all the drawables' IDs.\n     * @return IDs.\n     */\n    abstract getDrawableIDs(): string[];\n\n    /**\n     * Finds the index of a drawable by its ID.\n     * @return The index.\n     */\n    abstract getDrawableIndex(id: string): number;\n\n    /**\n     * Gets a drawable's vertices.\n     * @param index - Either the index or the ID of the drawable.\n     * @throws Error when the drawable cannot be found.\n     */\n    abstract getDrawableVertices(index: number | string): Float32Array;\n\n    /**\n     * Updates WebGL context bound to this model.\n     * @param gl - WebGL context.\n     * @param glContextID - Unique ID for given WebGL context.\n     */\n    abstract updateWebGLContext(gl: WebGLRenderingContext, glContextID: number): void;\n\n    /**\n     * Binds a texture to the model. The index must be the same as that of this texture\n     * in the {@link ModelSettings.textures} array.\n     */\n    abstract bindTexture(index: number, texture: WebGLTexture): void;\n\n    /**\n     * Draws the model.\n     */\n    abstract draw(gl: WebGLRenderingContext): void;\n}\n","import { clamp } from '@/utils';\n\n// Minimum distance to respond\nconst EPSILON = 0.01;\n\nconst MAX_SPEED = 40 / 7.5;\n\n// the time to accelerate to max speed\nconst ACCELERATION_TIME = 1 / (0.15 * 1000);\n\n/**\n * Interpolates the transition of focus position.\n */\nexport class FocusController {\n    /** The focus position. */\n    targetX = 0;\n\n    /** The focus position. */\n    targetY = 0;\n\n    /** Current position. */\n    x = 0;\n\n    /** Current position. */\n    y = 0;\n\n    /** Current velocity. */\n    vx = 0;\n\n    /** Current velocity. */\n    vy = 0;\n\n    /**\n     * Sets the focus position.\n     * @param x - X position in range `[-1, 1]`.\n     * @param y - Y position in range `[-1, 1]`.\n     * @param instant - Should the focus position be instantly applied.\n     */\n    focus(x: number, y: number, instant: boolean = false) {\n        this.targetX = clamp(x, -1, 1);\n        this.targetY = clamp(y, -1, 1);\n\n        if (instant) {\n            this.x = this.targetX;\n            this.y = this.targetY;\n        }\n    }\n\n    /**\n     * Updates the interpolation.\n     * @param dt - Delta time in milliseconds.\n     */\n    update(dt: DOMHighResTimeStamp) {\n        const dx = this.targetX - this.x;\n        const dy = this.targetY - this.y;\n\n        if (Math.abs(dx) < EPSILON && Math.abs(dy) < EPSILON) return;\n\n        const d = Math.sqrt(dx ** 2 + dy ** 2);\n        const maxSpeed = MAX_SPEED / (1000 / dt);\n\n        let ax = maxSpeed * (dx / d) - this.vx;\n        let ay = maxSpeed * (dy / d) - this.vy;\n\n        const a = Math.sqrt(ax ** 2 + ay ** 2);\n        const maxA = maxSpeed * ACCELERATION_TIME * dt;\n\n        if (a > maxA) {\n            ax *= maxA / a;\n            ay *= maxA / a;\n        }\n\n        this.vx += ax;\n        this.vy += ay;\n\n        const v = Math.sqrt(this.vx ** 2 + this.vy ** 2);\n        const maxV = 0.5 * (Math.sqrt(maxA ** 2 + 8 * maxA * d) - maxA);\n\n        if (v > maxV) {\n            this.vx *= maxV / v;\n            this.vy *= maxV / v;\n        }\n\n        this.x += this.vx;\n        this.y += this.vy;\n    }\n}\n","import { Live2DLoaderContext, Live2DLoaderTarget } from '@/factory/Live2DLoader';\nimport { logger } from '@/utils';\nimport { Middleware } from '@/utils/middleware';\n\nconst TAG = 'XHRLoader';\n\nclass NetworkError extends Error {\n    constructor(message: string, public url: string, public status: number, public aborted = false) {\n        super(message);\n    }\n}\n\n/**\n * The basic XHR loader.\n *\n * A network error will be thrown with the following properties:\n * - `url` - The request URL.\n * - `status` - The HTTP status.\n * - `aborted` - True if the error is caused by aborting the XHR.\n */\nexport class XHRLoader {\n    /**\n     * All the created XHRs, keyed by their owners respectively.\n     */\n    static xhrMap = new WeakMap<Live2DLoaderTarget, Set<XMLHttpRequest>>();\n\n    /**\n     * All the created XHRs as a flat array.\n     */\n    static allXhrSet = new Set<XMLHttpRequest>();\n\n    /**\n     * Middleware for Live2DLoader.\n     */\n    static loader: Middleware<Live2DLoaderContext> = (context, next) => {\n        return new Promise<void>((resolve, reject) => {\n            const xhr = XHRLoader.createXHR(\n                context.target,\n                context.settings ? context.settings.resolveURL(context.url) : context.url,\n                context.type,\n                data => {\n                    context.result = data;\n                    resolve();\n                },\n                reject,\n            );\n            xhr.send();\n        });\n    };\n\n    /**\n     * Creates a managed XHR.\n     * @param target - If provided, the XHR will be canceled when receiving an \"destroy\" event from the target.\n     * @param url - The URL.\n     * @param type - The XHR response type.\n     * @param onload - Load listener.\n     * @param onerror - Error handler.\n     */\n    static createXHR<T = any>(\n        target: Live2DLoaderTarget | undefined,\n        url: string,\n        type: XMLHttpRequestResponseType,\n        onload: (data: T) => void,\n        onerror: (e: Error) => void,\n    ): XMLHttpRequest {\n        const xhr = new XMLHttpRequest();\n\n        XHRLoader.allXhrSet.add(xhr);\n\n        if (target) {\n            let xhrSet = XHRLoader.xhrMap.get(target);\n\n            if (!xhrSet) {\n                xhrSet = new Set([xhr]);\n                XHRLoader.xhrMap.set(target, xhrSet);\n            } else {\n                xhrSet.add(xhr);\n            }\n\n            if (!target.listeners('destroy').includes(XHRLoader.cancelXHRs)) {\n                target.once('destroy', XHRLoader.cancelXHRs);\n            }\n        }\n\n        xhr.open('GET', url);\n        xhr.responseType = type;\n        xhr.onload = () => {\n            if ((xhr.status === 200 || xhr.status === 0) && xhr.response) {\n                onload(xhr.response);\n            } else {\n                (xhr.onerror as any)();\n            }\n        };\n        xhr.onerror = () => {\n            logger.warn(TAG, `Failed to load resource as ${xhr.responseType} (Status ${xhr.status}): ${url}`);\n            onerror(new NetworkError('Network error.', url, xhr.status));\n        };\n        xhr.onabort = () => onerror(new NetworkError('Aborted.', url, xhr.status, true));\n        xhr.onloadend = () => {\n            XHRLoader.allXhrSet.delete(xhr);\n\n            if (target) {\n                XHRLoader.xhrMap.get(target)?.delete(xhr);\n            }\n        };\n\n        return xhr;\n    }\n\n    /**\n     * Cancels all XHRs related to this target.\n     */\n    static cancelXHRs(this: Live2DLoaderTarget) {\n        XHRLoader.xhrMap.get(this)?.forEach(xhr => {\n            xhr.abort();\n            XHRLoader.allXhrSet.delete(xhr);\n        });\n        XHRLoader.xhrMap.delete(this);\n    }\n\n    /**\n     * Release all XHRs.\n     */\n    static release() {\n        XHRLoader.allXhrSet.forEach(xhr => xhr.abort());\n        XHRLoader.allXhrSet.clear();\n        XHRLoader.xhrMap = new WeakMap();\n    }\n}\n","export type Middleware<T> = (context: T, next: (err?: any) => Promise<void>) => Promise<void>\n\n/**\n * Run middlewares with given context.\n * @see https://github.com/koajs/compose/blob/master/index.js\n *\n * @param middleware\n * @param context\n */\nexport function runMiddlewares<T>(middleware: Middleware<T>[], context: T): Promise<void> {\n    // last called middleware #\n    let index = -1;\n    return dispatch(0);\n\n    function dispatch(i: number, err?: Error): Promise<void> {\n        if (err) return Promise.reject(err);\n        if (i <= index) return Promise.reject(new Error('next() called multiple times'));\n        index = i;\n        const fn = middleware[i];\n        if (!fn) return Promise.resolve();\n        try {\n            return Promise.resolve(fn(context, dispatch.bind(null, i + 1)));\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__20__;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__24__;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","import { InteractionEvent, InteractionManager } from '@pixi/interaction';\nimport { Live2DModel } from './Live2DModel';\n\n/**\n * The interaction control split from Live2DModel class for code clarity. This mixin should *only*\n * be used on the Live2DModel.\n */\nexport class InteractionMixin {\n    private _autoInteract = false;\n\n    /**\n     * Enables automatic interaction. Only takes effect if Pixi's interaction\n     * feature has been enabled (by registering the `PIXI.InteractionManager` into `PIXI.Renderer`).\n     */\n    get autoInteract(): boolean {\n        return this._autoInteract;\n    }\n\n    set autoInteract(autoInteract: boolean) {\n        if (autoInteract !== this._autoInteract) {\n            if (autoInteract) {\n                (this as any as Live2DModel).on('pointertap', onTap, this);\n            } else {\n                (this as any as Live2DModel).off('pointertap', onTap, this);\n            }\n\n            this._autoInteract = autoInteract;\n        }\n    }\n\n    /**\n     * Local reference used to clean up the event listeners when destroying the model.\n     */\n    interactionManager?: InteractionManager;\n\n    /**\n     * Registers interaction by subscribing to the `PIXI.InteractionManager`.\n     */\n    registerInteraction(this: Live2DModel, manager?: InteractionManager): void {\n        if (manager !== this.interactionManager) {\n            this.unregisterInteraction();\n\n            if (this._autoInteract && manager) {\n                this.interactionManager = manager;\n\n                manager.on('pointermove', onPointerMove, this);\n            }\n        }\n    }\n\n    /**\n     * Unregisters interaction.\n     */\n    unregisterInteraction(this: Live2DModel): void {\n        if (this.interactionManager) {\n            this.interactionManager?.off('pointermove', onPointerMove, this);\n            this.interactionManager = undefined;\n        }\n    }\n}\n\nfunction onTap(this: Live2DModel, event: InteractionEvent): void {\n    this.tap(event.data.global.x, event.data.global.y);\n}\n\nfunction onPointerMove(this: Live2DModel, event: InteractionEvent) {\n    this.focus(event.data.global.x, event.data.global.y);\n}\n","import { Transform } from '@pixi/math';\n\n/**\n * Useless class. May be useful in the future.\n */\nexport class Live2DTransform extends Transform {\n}\n","import { InternalModel, ModelSettings, MotionPriority } from '@/cubism-common';\nimport { MotionManagerOptions } from '@/cubism-common/MotionManager';\nimport type { Live2DFactoryOptions } from '@/factory/Live2DFactory';\nimport { Live2DFactory } from '@/factory/Live2DFactory';\nimport { Renderer, Texture } from '@pixi/core';\nimport { Container } from '@pixi/display';\nimport { Matrix, ObservablePoint, Point, Rectangle } from '@pixi/math';\nimport { Ticker } from '@pixi/ticker';\nimport { InteractionMixin } from './InteractionMixin';\nimport { Live2DTransform } from './Live2DTransform';\nimport { applyMixins, logger } from './utils';\n\nexport interface Live2DModelOptions extends MotionManagerOptions {\n    /**\n     * Should the internal model be automatically updated by `PIXI.Ticker.shared`.\n     * @default ture\n     */\n    autoUpdate?: boolean;\n\n    /**\n     * Should the internal model automatically reacts to interactions by listening for pointer events.\n     * @see {@link InteractionMixin}\n     * @default true\n     */\n    autoInteract?: boolean;\n}\n\nconst tempPoint = new Point();\nconst tempMatrix = new Matrix();\n\n// a reference to Ticker class, defaults to window.PIXI.Ticker (when loaded by a <script> tag)\nlet TickerClass: typeof Ticker | undefined = (window as any).PIXI?.Ticker;\n\nexport interface Live2DModel<IM extends InternalModel = InternalModel> extends InteractionMixin {}\n\nexport type Live2DConstructor = { new(options?: Live2DModelOptions): Live2DModel }\n\n/**\n * A wrapper that allows the Live2D model to be used as a DisplayObject in PixiJS.\n *\n * ```js\n * const model = await Live2DModel.from('shizuku.model.json');\n * container.add(model);\n * ```\n * @emits {@link Live2DModelEvents}\n */\nexport class Live2DModel<IM extends InternalModel = InternalModel> extends Container {\n    /**\n     * Creates a Live2DModel from given source.\n     * @param source - Can be one of: settings file URL, settings JSON object, ModelSettings instance.\n     * @param options - Options for the creation.\n     * @return Promise that resolves with the Live2DModel.\n     */\n    static from<M extends Live2DConstructor = typeof Live2DModel>(this: M, source: string | JSONObject | ModelSettings, options?: Live2DFactoryOptions): Promise<InstanceType<M>> {\n        const model = new this(options) as InstanceType<M>;\n\n        return Live2DFactory.setupLive2DModel(model, source, options).then(() => model);\n    }\n\n    /**\n     * Synchronous version of `Live2DModel.from()`. This method immediately returns a Live2DModel instance,\n     * whose resources have not been loaded. Therefore this model can't be manipulated or rendered\n     * until the \"load\" event has been emitted.\n     *\n     * ```js\n     * // no `await` here as it's not a Promise\n     * const model = Live2DModel.fromSync('shizuku.model.json');\n     *\n     * // these will cause errors!\n     * // app.stage.addChild(model);\n     * // model.motion('tap_body');\n     *\n     * model.once('load', () => {\n     *     // now it's safe\n     *     app.stage.addChild(model);\n     *     model.motion('tap_body');\n     * });\n     * ```\n     */\n    static fromSync<M extends Live2DConstructor = typeof Live2DModel>(this: M, source: string | JSONObject | ModelSettings, options?: Live2DFactoryOptions): InstanceType<M> {\n        const model = new this(options) as InstanceType<M>;\n\n        Live2DFactory.setupLive2DModel(model, source, options).then(options?.onLoad).catch(options?.onError);\n\n        return model;\n    }\n\n    /**\n     * Registers the class of `PIXI.Ticker` for auto updating.\n     */\n    static registerTicker(tickerClass: typeof Ticker): void {\n        TickerClass = tickerClass;\n    }\n\n    /**\n     * Tag for logging.\n     */\n    tag = 'Live2DModel(uninitialized)';\n\n    /**\n     * The internal model. Though typed as non-nullable, it'll be undefined until the \"ready\" event is emitted.\n     */\n    internalModel!: IM;\n\n    /**\n     * Pixi textures.\n     */\n    textures: Texture[] = [];\n\n    /** @override */\n    transform = new Live2DTransform();\n\n    /**\n     * The anchor behaves like the one in `PIXI.Sprite`, where `(0, 0)` means the top left\n     * and `(1, 1)` means the bottom right.\n     */\n    anchor = new ObservablePoint(this.onAnchorChange, this, 0, 0);\n\n    /**\n     * An ID of Gl context that syncs with `renderer.CONTEXT_UID`. Used to check if the GL context has changed.\n     */\n    protected glContextID = -1;\n\n    /**\n     * Elapsed time in milliseconds since created.\n     */\n    elapsedTime: DOMHighResTimeStamp = performance.now();\n\n    /**\n     * Elapsed time in milliseconds from last frame to this frame.\n     */\n    deltaTime: DOMHighResTimeStamp = 0;\n\n    protected _autoUpdate = false;\n\n    /**\n     * Enables automatic updating. Requires {@link Live2DModel.registerTicker} or the global `window.PIXI.Ticker`.\n     */\n    get autoUpdate() {\n        return this._autoUpdate;\n    }\n\n    set autoUpdate(autoUpdate: boolean) {\n        if (autoUpdate) {\n            if (!this._destroyed) {\n                if (TickerClass) {\n                    TickerClass.shared.add(this.onTickerUpdate, this);\n\n                    this._autoUpdate = true;\n                } else {\n                    logger.warn(this.tag, 'No Ticker registered, please call Live2DModel.registerTicker(Ticker).');\n                }\n            }\n        } else {\n            TickerClass?.shared.remove(this.onTickerUpdate, this);\n\n            this._autoUpdate = false;\n        }\n    }\n\n    constructor(options?: Live2DModelOptions) {\n        super();\n\n        this.once('modelLoaded', () => this.init(options));\n    }\n\n    // TODO: rename\n    /**\n     * A handler of the \"modelLoaded\" event, invoked when the internal model has been loaded.\n     */\n    protected init(options?: Live2DModelOptions) {\n        this.tag = `Live2DModel(${this.internalModel.settings.name})`;\n\n        const _options = Object.assign({\n            autoUpdate: true,\n            autoInteract: true,\n        }, options);\n\n        if (_options.autoInteract) {\n            this.interactive = true;\n        }\n\n        this.autoInteract = _options.autoInteract;\n        this.autoUpdate = _options.autoUpdate;\n    }\n\n    /**\n     * A callback that observes {@link anchor}, invoked when the anchor's values have been changed.\n     */\n    protected onAnchorChange(): void {\n        this.pivot.set(this.anchor.x * this.internalModel.width, this.anchor.y * this.internalModel.height);\n    }\n\n    /**\n     * Shorthand to start a motion.\n     * @param group - The motion group.\n     * @param index - The index in this group. If not presented, a random motion will be started.\n     * @param priority - The motion priority. Defaults to `MotionPriority.NORMAL`.\n     * @return Promise that resolves with true if the motion is successfully started, with false otherwise.\n     */\n    motion(group: string, index?: number, priority?: MotionPriority): Promise<boolean> {\n        return index === undefined\n            ? this.internalModel.motionManager.startRandomMotion(group, priority)\n            : this.internalModel.motionManager.startMotion(group, index, priority);\n    }\n\n    /**\n     * Shorthand to set an expression.\n     * @param id - Either the index, or the name of the expression. If not presented, a random expression will be set.\n     * @return Promise that resolves with true if succeeded, with false otherwise.\n     */\n    expression(id?: number | string): Promise<boolean> {\n        if (this.internalModel.motionManager.expressionManager) {\n            return id === undefined\n                ? this.internalModel.motionManager.expressionManager.setRandomExpression()\n                : this.internalModel.motionManager.expressionManager.setExpression(id);\n        }\n        return Promise.resolve(false);\n    }\n\n    /**\n     * Updates the focus position. This will not cause the model to immediately look at the position,\n     * instead the movement will be interpolated.\n     * @param x - Position in world space.\n     * @param y - Position in world space.\n     * @param instant - Should the focus position be instantly applied.\n     */\n    focus(x: number, y: number, instant: boolean = false): void {\n        tempPoint.x = x;\n        tempPoint.y = y;\n\n        // we can pass `true` as the third argument to skip the update transform\n        // because focus won't take effect until the model is rendered,\n        // and a model being rendered will always get transform updated\n        this.toModelPosition(tempPoint, tempPoint, true);\n\n        this.internalModel.focusController.focus(\n            (tempPoint.x / this.internalModel.originalWidth) * 2 - 1,\n            -((tempPoint.y / this.internalModel.originalHeight) * 2 - 1),\n            instant,\n        );\n    }\n\n    /**\n     * Tap on the model. This will perform a hit-testing, and emit a \"hit\" event\n     * if at least one of the hit areas is hit.\n     * @param x - Position in world space.\n     * @param y - Position in world space.\n     * @emits {@link Live2DModelEvents.hit}\n     */\n    tap(x: number, y: number): void {\n        const hitAreaNames = this.hitTest(x, y);\n\n        if (hitAreaNames.length) {\n            logger.log(this.tag, `Hit`, hitAreaNames);\n\n            this.emit('hit', hitAreaNames);\n        }\n    }\n\n    /**\n     * Hit-test on the model.\n     * @param x - Position in world space.\n     * @param y - Position in world space.\n     * @return The names of the *hit* hit areas. Can be empty if none is hit.\n     */\n    hitTest(x: number, y: number): string[] {\n        tempPoint.x = x;\n        tempPoint.y = y;\n        this.toModelPosition(tempPoint, tempPoint);\n\n        return this.internalModel.hitTest(tempPoint.x, tempPoint.y);\n    }\n\n    /**\n     * Calculates the position in the canvas of original, unscaled Live2D model.\n     * @param position - A Point in world space.\n     * @param result - A Point to store the new value. Defaults to a new Point.\n     * @param skipUpdate - True to skip the update transform.\n     * @return The Point in model canvas space.\n     */\n    toModelPosition(position: Point, result: Point = position.clone(), skipUpdate?: boolean): Point {\n        if (!skipUpdate) {\n            this._recursivePostUpdateTransform();\n\n            if (!this.parent) {\n                (this.parent as any) = this._tempDisplayObjectParent;\n                this.displayObjectUpdateTransform();\n                (this.parent as any) = null;\n            } else {\n                this.displayObjectUpdateTransform();\n            }\n        }\n\n        this.transform.worldTransform.applyInverse(position, result);\n        this.internalModel.localTransform.applyInverse(result, result);\n\n        return result;\n    }\n\n    /**\n     * A method required by `PIXI.InteractionManager` to perform hit-testing.\n     * @param point - A Point in world space.\n     * @return True if the point is inside this model.\n     */\n    containsPoint(point: Point): boolean {\n        return this.getBounds(true).contains(point.x, point.y);\n    }\n\n    /** @override */\n    protected _calculateBounds(): void {\n        this._bounds.addFrame(this.transform, 0, 0, this.internalModel.width, this.internalModel.height);\n    }\n\n    /**\n     * An update callback to be added to `PIXI.Ticker` and invoked every tick.\n     */\n    onTickerUpdate(): void {\n        this.update(TickerClass!.shared.deltaMS);\n    }\n\n    /**\n     * Updates the model. Note this method just updates the timer,\n     * and the actual update will be done right before rendering the model.\n     * @param dt - The elapsed time in milliseconds since last frame.\n     */\n    update(dt: DOMHighResTimeStamp): void {\n        this.deltaTime += dt;\n        this.elapsedTime += dt;\n\n        // don't call `this.internalModel.update()` here, because it requires WebGL context\n    }\n\n    /** @override */\n    protected _render(renderer: Renderer): void {\n        this.registerInteraction(renderer.plugins.interaction);\n\n        // reset certain systems in renderer to make Live2D's drawing system compatible with Pixi\n        renderer.batch.reset();\n        renderer.geometry.reset();\n        renderer.shader.reset();\n        renderer.state.reset();\n\n        let shouldUpdateTexture = false;\n\n        // when the WebGL context has changed\n        if (this.glContextID !== (renderer as any).CONTEXT_UID) {\n            this.glContextID = (renderer as any).CONTEXT_UID;\n\n            this.internalModel.updateWebGLContext(renderer.gl, this.glContextID);\n\n            shouldUpdateTexture = true;\n        }\n\n        for (let i = 0; i < this.textures.length; i++) {\n            const texture = this.textures[i]!;\n\n            if (!texture.valid) {\n                continue;\n            }\n\n            if (shouldUpdateTexture || !(texture.baseTexture as any)._glTextures[this.glContextID]) {\n                renderer.gl.pixelStorei(WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL, this.internalModel.textureFlipY);\n\n                // let the TextureSystem generate corresponding WebGLTexture, and bind to an arbitrary location\n                renderer.texture.bind(texture.baseTexture, 0);\n            }\n\n            // bind the WebGLTexture into Live2D core.\n            // because the Texture in Pixi can be shared between multiple DisplayObjects,\n            // it's unable to know if the WebGLTexture in this Texture has been destroyed (GCed) and regenerated,\n            // and therefore we always bind the texture at this moment no matter what\n            this.internalModel.bindTexture(i, (texture.baseTexture as any)._glTextures[this.glContextID].texture);\n\n            // manually update the GC counter so they won't be GCed while using this model\n            (texture.baseTexture as any).touched = renderer.textureGC.count;\n        }\n\n        const viewport = (renderer.framebuffer as any).viewport as Rectangle;\n        this.internalModel.viewport = [viewport.x, viewport.y, viewport.width, viewport.height];\n\n        // update only if the time has changed, as the model will possibly be updated once but rendered multiple times\n        if (this.deltaTime) {\n            this.internalModel.update(this.deltaTime, this.elapsedTime);\n            this.deltaTime = 0;\n        }\n\n        const internalTransform = tempMatrix\n            .copyFrom(renderer.globalUniforms.uniforms.projectionMatrix)\n            .append(this.worldTransform);\n\n        this.internalModel.updateTransform(internalTransform);\n        this.internalModel.draw(renderer.gl);\n\n        // reset WebGL state and texture bindings\n        renderer.state.reset();\n        renderer.texture.reset();\n    }\n\n    /**\n     * Destroys the model and all related resources. This takes the same options and also\n     * behaves the same as `PIXI.Container#destroy`.\n     * @param options - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param [options.children=false] - if set to true, all the children will have their destroy\n     *  method called as well. 'options' will be passed on to those calls.\n     * @param [options.texture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the texture of the child sprite\n     * @param [options.baseTexture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the base texture of the child sprite\n     */\n    destroy(options?: { children?: boolean, texture?: boolean, baseTexture?: boolean }): void {\n        this.emit('destroy');\n\n        // the setters will do the cleanup\n        this.autoUpdate = false;\n\n        this.unregisterInteraction();\n\n        if (options?.texture) {\n            this.textures.forEach(texture => texture.destroy(options.baseTexture));\n        }\n\n        this.internalModel.destroy();\n\n        super.destroy(options);\n    }\n}\n\napplyMixins(Live2DModel, [InteractionMixin]);\n","import { InternalModel, ModelSettings } from '@/cubism-common';\nimport { Live2DFactory, Live2DFactoryContext } from '@/factory';\nimport { Middleware } from '@/utils/middleware';\nimport { url as urlUtils } from '@pixi/utils';\n\ndeclare global {\n    interface File {\n        webkitRelativePath: string;\n    }\n}\n\ndeclare module '@/cubism-common/ModelSettings' {\n    interface ModelSettings {\n        /** @ignore */\n        _objectURL?: string;\n    }\n}\n\nexport type ExtendedFileList = File[] & { settings?: ModelSettings }\n\n/**\n * Experimental loader to load resources from uploaded files.\n *\n * This loader relies on\n * [webkitRelativePath](https://developer.mozilla.org/en-US/docs/Web/API/File/webkitRelativePath)\n * to recognize the file path.\n *\n * Though named as a \"Loader\", this class has nothing to do with Live2DLoader,\n * it only contains a middleware for the Live2DFactory.\n */\nexport class FileLoader {\n    /**\n     * Stores all the object URLs of uploaded files.\n     */\n    static filesMap: {\n        [settingsFileURL: string]: {\n            [resourceFileURL: string]: string\n        }\n    } = {};\n\n    /**\n     * Resolves the path of a resource file to the object URL.\n     * @param settingsURL - Object URL of the settings file.\n     * @param filePath - Resource file path.\n     * @return Resolved object URL.\n     */\n    static resolveURL(settingsURL: string, filePath: string): string {\n        const resolved = FileLoader.filesMap[settingsURL]?.[filePath];\n\n        if (resolved === undefined) {\n            throw new Error('Cannot find this file from uploaded files: ' + filePath);\n        }\n\n        return resolved;\n    }\n\n    /**\n     * Middleware for Live2DFactory.\n     */\n    static factory: Middleware<Live2DFactoryContext> = async (context, next) => {\n        if (Array.isArray(context.source) && context.source[0] instanceof File) {\n            const files = context.source as File[];\n\n            let settings = (files as ExtendedFileList).settings;\n\n            if (!settings) {\n                settings = await FileLoader.createSettings(files);\n            } else if (!settings._objectURL) {\n                throw  new Error('\"_objectURL\" must be specified in ModelSettings');\n            }\n\n            settings.validateFiles(files.map(file => encodeURI(file.webkitRelativePath)));\n\n            await FileLoader.upload(files, settings);\n\n            // override the default method to resolve URL from uploaded files\n            settings.resolveURL = function(url) {\n                return FileLoader.resolveURL(this._objectURL!, url);\n            };\n\n            context.source = settings;\n\n            // clean up when destroying the model\n            context.live2dModel.once('modelLoaded', (internalModel: InternalModel) => {\n                internalModel.once('destroy', function(this: InternalModel) {\n                    const objectURL = this.settings._objectURL!;\n\n                    URL.revokeObjectURL(objectURL);\n\n                    if (FileLoader.filesMap[objectURL]) {\n                        for (const resourceObjectURL of Object.values(FileLoader.filesMap[objectURL]!)) {\n                            URL.revokeObjectURL(resourceObjectURL);\n                        }\n                    }\n\n                    delete FileLoader.filesMap[objectURL];\n                });\n            });\n        }\n\n        return next();\n    };\n\n    /**\n     * Consumes the files by storing their object URLs. Files not defined in the settings will be ignored.\n     */\n    static async upload(files: File[], settings: ModelSettings): Promise<void> {\n        const fileMap: Record<string, string> = {};\n\n        // only consume the files defined in settings\n        for (const definedFile of settings.getDefinedFiles()) {\n            const actualPath = decodeURI(urlUtils.resolve(settings.url, definedFile));\n\n            const actualFile = files.find(file => file.webkitRelativePath === actualPath);\n\n            if (actualFile) {\n                fileMap[definedFile] = URL.createObjectURL(actualFile);\n            }\n        }\n\n        FileLoader.filesMap[settings._objectURL!] = fileMap;\n    }\n\n    /**\n     * Creates a ModelSettings by given files.\n     * @return Promise that resolves with the created ModelSettings.\n     */\n    static async createSettings(files: File[]): Promise<ModelSettings> {\n        const settingsFile = files.find(file => file.name.endsWith('model.json') || file.name.endsWith('model3.json'));\n\n        if (!settingsFile) {\n            throw new TypeError('Settings file not found');\n        }\n\n        const settingsText = await FileLoader.readText(settingsFile);\n        const settingsJSON = JSON.parse(settingsText);\n\n        settingsJSON.url = settingsFile.webkitRelativePath;\n\n        const runtime = Live2DFactory.findRuntime(settingsJSON);\n\n        if (!runtime) {\n            throw new Error('Unknown settings JSON');\n        }\n\n        const settings = runtime.createModelSettings(settingsJSON);\n\n        settings._objectURL = URL.createObjectURL(settingsFile);\n\n        return settings;\n    }\n\n    /**\n     * Reads a file as text in UTF-8.\n     */\n    static async readText(file: File): Promise<string> {\n        return new Promise<string>((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.onload = () => resolve(reader.result as string);\n            reader.onerror = reject;\n            reader.readAsText(file, 'utf8');\n        });\n    }\n}\n\nLive2DFactory.live2DModelMiddlewares.unshift(FileLoader.factory);\n","import { url as urlUtils } from '@pixi/utils';\nimport { Middleware } from '@/utils/middleware';\nimport { InternalModel, ModelSettings } from '@/cubism-common';\nimport { ExtendedFileList } from './FileLoader';\nimport { Live2DFactory, Live2DFactoryContext } from '@/factory/Live2DFactory';\nimport { Live2DLoader } from '@/factory/Live2DLoader';\n\ntype ZipReader = any;\n\n/**\n * Experimental loader to load resources from a zip file.\n *\n * Though named as a \"Loader\", this class has nothing to do with Live2DLoader,\n * it only contains a middleware for the Live2DFactory.\n */\nexport class ZipLoader {\n    static ZIP_PROTOCOL = 'zip://';\n    static uid = 0;\n\n    static factory: Middleware<Live2DFactoryContext> = async (context, next) => {\n        const source = context.source;\n\n        let sourceURL: string;\n        let zipBlob: Blob | undefined;\n        let settings: ModelSettings | undefined;\n\n        if (typeof source === 'string' && (source.endsWith('.zip') || source.startsWith(ZipLoader.ZIP_PROTOCOL))) {\n            if (source.startsWith(ZipLoader.ZIP_PROTOCOL)) {\n                sourceURL = source.slice(ZipLoader.ZIP_PROTOCOL.length);\n            } else {\n                sourceURL = source;\n            }\n\n            zipBlob = await Live2DLoader.load({\n                url: sourceURL,\n                type: 'blob',\n                target: context.live2dModel,\n            });\n        } else if (\n            Array.isArray(source)\n            && source.length === 1\n            && source[0] instanceof File\n            && source[0].name.endsWith('.zip')\n        ) {\n            zipBlob = source[0];\n\n            sourceURL = URL.createObjectURL(zipBlob);\n\n            settings = (source as ExtendedFileList).settings;\n        }\n\n        if (zipBlob) {\n            if (!zipBlob.size) {\n                throw new Error('Empty zip file');\n            }\n\n            const reader = await ZipLoader.zipReader(zipBlob, sourceURL!);\n\n            if (!settings) {\n                settings = await ZipLoader.createSettings(reader);\n            }\n\n            // a fake URL, the only requirement is it should be unique,\n            // as FileLoader will use it as the ID of all uploaded files\n            settings._objectURL = ZipLoader.ZIP_PROTOCOL + ZipLoader.uid + '/' + settings.url;\n\n            const files = await ZipLoader.unzip(reader, settings);\n\n            (files as ExtendedFileList).settings = settings;\n\n            // pass files to the FileLoader\n            context.source = files;\n\n            // clean up when destroying the model\n            if (sourceURL!.startsWith('blob:')) {\n                context.live2dModel.once('modelLoaded', (internalModel: InternalModel) => {\n                    internalModel.once('destroy', function(this: InternalModel) {\n                        URL.revokeObjectURL(sourceURL);\n\n                    });\n                });\n            }\n\n            ZipLoader.releaseReader(reader);\n        }\n\n        return next();\n    };\n\n    static async unzip(reader: ZipReader, settings: ModelSettings): Promise<File[]> {\n        const filePaths = await ZipLoader.getFilePaths(reader);\n\n        const requiredFilePaths: string[] = [];\n\n        // only consume the files defined in settings\n        for (const definedFile of settings.getDefinedFiles()) {\n            const actualPath = decodeURI(urlUtils.resolve(settings.url, definedFile));\n\n            if (filePaths.includes(actualPath)) {\n                requiredFilePaths.push(actualPath);\n            }\n        }\n\n        const files = await ZipLoader.getFiles(reader, requiredFilePaths);\n\n        for (let i = 0; i < files.length; i++) {\n            const path = requiredFilePaths[i]!;\n            const file = files[i]!;\n\n            // let's borrow this property...\n            Object.defineProperty(file, 'webkitRelativePath', {\n                value: path,\n            });\n        }\n\n        return files;\n    }\n\n    static async createSettings(reader: ZipReader): Promise<ModelSettings> {\n        const filePaths = await ZipLoader.getFilePaths(reader);\n\n        const settingsFilePath = filePaths.find(path => path.endsWith('model.json') || path.endsWith('model3.json'));\n\n        if (!settingsFilePath) {\n            throw  new Error('Settings file not found');\n        }\n\n        const settingsText = await ZipLoader.readText(reader, settingsFilePath);\n\n        if (!settingsText) {\n            throw new Error('Empty settings file: ' + settingsFilePath);\n        }\n\n        const settingsJSON = JSON.parse(settingsText);\n\n        settingsJSON.url = settingsFilePath;\n\n        const runtime = Live2DFactory.findRuntime(settingsJSON);\n\n        if (!runtime) {\n            throw new Error('Unknown settings JSON');\n        }\n\n        return runtime.createModelSettings(settingsJSON);\n    }\n\n    static async zipReader(data: Blob, url: string): Promise<ZipReader> {\n        throw new Error('Not implemented');\n    }\n\n    static async getFilePaths(reader: ZipReader): Promise<string[]> {\n        throw new Error('Not implemented');\n    }\n\n    static async getFiles(reader: ZipReader, paths: string[]): Promise<File[]> {\n        throw new Error('Not implemented');\n    }\n\n    static async readText(reader: ZipReader, path: string): Promise<string> {\n        throw new Error('Not implemented');\n    }\n\n    static releaseReader(reader: ZipReader) {\n        // this method is optional\n    }\n}\n\nLive2DFactory.live2DModelMiddlewares.unshift(ZipLoader.factory);\n","import { Live2DModel } from '@/Live2DModel';\nimport { Renderer } from '@pixi/core';\nimport { Graphics } from '@pixi/graphics';\nimport { InteractionEvent } from '@pixi/interaction';\nimport { Text, TextStyle } from '@pixi/text';\nimport { Rectangle } from '@pixi/math';\n\nconst tempBounds = new Rectangle();\n\nexport class HitAreaFrames extends Graphics {\n    initialized = false;\n\n    texts: Text[] = [];\n\n    strokeWidth = 4;\n    normalColor = 0xE31A1A;\n    activeColor = 0x1EC832;\n\n    constructor() {\n        super();\n\n        this.interactive = true;\n\n        this.on('added', this.init).on('pointermove', this.onPointerMove);\n    }\n\n    init() {\n        const internalModel = (this.parent as Live2DModel).internalModel;\n\n        const textStyle = new TextStyle({\n            fontSize: 24,\n            fill: '#ffffff',\n            stroke: '#000000',\n            strokeThickness: 4,\n        });\n\n        this.texts = Object.keys(internalModel.hitAreas).map(hitAreaName => {\n            const text = new Text(hitAreaName, textStyle);\n\n            text.visible = false;\n\n            this.addChild(text);\n\n            return text;\n        });\n    }\n\n    onPointerMove(e: InteractionEvent) {\n        const hitAreaNames = (this.parent as Live2DModel).hitTest(e.data.global.x, e.data.global.y);\n\n        this.texts.forEach(text => {\n            text.visible = hitAreaNames.includes(text.text);\n        });\n    }\n\n    /** @override */\n    protected _render(renderer: Renderer): void {\n        const internalModel = (this.parent as Live2DModel).internalModel;\n\n        // extract scale from the transform matrix, and invert it to ease following calculation\n        // https://math.stackexchange.com/a/13165\n        const scale = 1 / Math.sqrt(this.transform.worldTransform.a ** 2 + this.transform.worldTransform.b ** 2);\n\n        this.texts.forEach(text => {\n            (\n                // correct the type definition of this method, the official definition is wrong!\n                this.lineStyle as any as (options: { width?: number, color?: number }) => void\n            )({\n                width: this.strokeWidth * scale,\n                color: text.visible ? this.activeColor : this.normalColor,\n            });\n\n            const bounds = internalModel.getDrawableBounds(internalModel.hitAreas[text.text]!.index, tempBounds);\n            const transform = internalModel.localTransform;\n\n            bounds.x = bounds.x * transform.a + transform.tx;\n            bounds.y = bounds.y * transform.d + transform.ty;\n            bounds.width = bounds.width * transform.a;\n            bounds.height = bounds.height * transform.d;\n\n            this.drawRect(bounds.x, bounds.y, bounds.width, bounds.height);\n\n            text.x = bounds.x + this.strokeWidth * scale;\n            text.y = bounds.y + this.strokeWidth * scale;\n            text.scale.set(scale);\n        });\n\n        super._render(renderer);\n\n        this.clear();\n    }\n}\n","var baseRest = require('./_baseRest'),\n    pullAll = require('./pullAll');\n\n/**\n * Removes all given values from `array` using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n * to remove elements from an array by predicate.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...*} [values] The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n *\n * _.pull(array, 'a', 'c');\n * console.log(array);\n * // => ['b', 'b']\n */\nvar pull = baseRest(pullAll);\n\nmodule.exports = pull;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__34__;","module.exports = __WEBPACK_EXTERNAL_MODULE__35__;","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var basePullAll = require('./_basePullAll');\n\n/**\n * This method is like `_.pull` except that it accepts an array of values to remove.\n *\n * **Note:** Unlike `_.difference`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n *\n * _.pullAll(array, ['a', 'c']);\n * console.log(array);\n * // => ['b', 'b']\n */\nfunction pullAll(array, values) {\n  return (array && array.length && values && values.length)\n    ? basePullAll(array, values)\n    : array;\n}\n\nmodule.exports = pullAll;\n","var arrayMap = require('./_arrayMap'),\n    baseIndexOf = require('./_baseIndexOf'),\n    baseIndexOfWith = require('./_baseIndexOfWith'),\n    baseUnary = require('./_baseUnary'),\n    copyArray = require('./_copyArray');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAllBy` without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAll(array, values, iteratee, comparator) {\n  var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n      index = -1,\n      length = values.length,\n      seen = array;\n\n  if (array === values) {\n    values = copyArray(values);\n  }\n  if (iteratee) {\n    seen = arrayMap(array, baseUnary(iteratee));\n  }\n  while (++index < length) {\n    var fromIndex = 0,\n        value = values[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n      if (seen !== array) {\n        splice.call(seen, fromIndex, 1);\n      }\n      splice.call(array, fromIndex, 1);\n    }\n  }\n  return array;\n}\n\nmodule.exports = basePullAll;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","/**\n * This function is like `baseIndexOf` except that it accepts a comparator.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOfWith(array, value, fromIndex, comparator) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (comparator(array[index], value)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseIndexOfWith;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","// subclassing is impossible because it will be instantiated by `Live2DMotion.create()`\ndeclare interface Live2DMotion {\n    onFinishHandler?(motion: this): void\n}\n\nconst originalUpdateParam = Live2DMotion.prototype.updateParam;\n\nLive2DMotion.prototype.updateParam = function(model: Live2DModelWebGL, entry: Live2DObfuscated.MotionQueueEnt) {\n    originalUpdateParam.call(this, model, entry);\n\n    if (entry.isFinished() && this.onFinishHandler) {\n        this.onFinishHandler(this);\n\n        delete this.onFinishHandler;\n    }\n};\n","import { config } from '@/config';\n\nexport class Live2DExpression extends AMotion {\n    readonly params: NonNullable<Cubism2Spec.ExpressionJSON['params']> = [];\n\n    constructor(json: Cubism2Spec.ExpressionJSON) {\n        super();\n\n        this.setFadeIn(json.fade_in! > 0 ? json.fade_in! : config.expressionFadingDuration);\n        this.setFadeOut(json.fade_out! > 0 ? json.fade_out! : config.expressionFadingDuration);\n\n        if (Array.isArray(json.params)) {\n            json.params.forEach(param => {\n                const calc = param.calc || 'add';\n\n                if (calc === 'add') {\n                    const defaultValue = param.def || 0;\n                    param.val -= defaultValue;\n                } else if (calc === 'mult') {\n                    const defaultValue = param.def || 1;\n                    param.val /= defaultValue;\n                }\n\n                this.params.push({\n                    calc,\n                    val: param.val,\n                    id: param.id,\n                });\n            });\n        }\n    }\n\n    /** @override */\n    updateParamExe(model: Live2DModelWebGL, time: DOMTimeStamp, weight: number, motionQueueEnt: unknown) {\n        this.params.forEach(param => {\n            // this algorithm seems to be broken for newer Neptunia series models, have no idea\n            //\n            // switch (param.type) {\n            //     case ParamCalcType.Set:\n            //         model.setParamFloat(param.id, param.value, weight);\n            //         break;\n            //     case ParamCalcType.Add:\n            //         model.addToParamFloat(param.id, param.value * weight);\n            //         break;\n            //     case ParamCalcType.Mult:\n            //         model.multParamFloat(param.id, param.value, weight);\n            //         break;\n            // }\n\n            // this works fine for any model\n            model.setParamFloat(param.id, param.val * weight);\n        });\n    }\n}\n","import { MotionManagerOptions } from '@/cubism-common';\nimport { ExpressionManager } from '@/cubism-common/ExpressionManager';\nimport { Cubism2ModelSettings } from '@/cubism2/Cubism2ModelSettings';\nimport { Live2DExpression } from './Live2DExpression';\n\nexport class Cubism2ExpressionManager extends ExpressionManager<Live2DExpression> {\n    readonly queueManager = new MotionQueueManager();\n\n    readonly definitions: Cubism2Spec.Expression[];\n\n    readonly settings!: Cubism2ModelSettings;\n\n    constructor(settings: Cubism2ModelSettings, options?: MotionManagerOptions) {\n        super(settings, options);\n\n        this.definitions = this.settings.expressions ?? [];\n\n        this.init();\n    }\n\n    isFinished(): boolean {\n        return this.queueManager.isFinished();\n    }\n\n    getExpressionIndex(name: string): number {\n        return this.definitions.findIndex(def => def.name === name);\n    }\n\n    getExpressionFile(definition: Cubism2Spec.Expression): string {\n        return definition.file;\n    }\n\n    createExpression(data: object, definition: Cubism2Spec.Expression | undefined): Live2DExpression {\n        return new Live2DExpression(data);\n    }\n\n    protected _setExpression(motion: Live2DExpression): number {\n        return this.queueManager.startMotion(motion);\n    }\n\n    protected stopAllExpressions(): void {\n        this.queueManager.stopAllMotions();\n    }\n\n    protected updateParameters(model: Live2DModelWebGL, dt: number): boolean {\n        return this.queueManager.updateParam(model);\n    }\n}\n","import { MotionManager, MotionManagerOptions } from '@/cubism-common/MotionManager';\nimport { Cubism2ExpressionManager } from '@/cubism2/Cubism2ExpressionManager';\nimport { Cubism2ModelSettings } from '@/cubism2/Cubism2ModelSettings';\nimport './patch-motion';\nimport { config } from '@/config';\n\nexport class Cubism2MotionManager extends MotionManager<Live2DMotion, Cubism2Spec.Motion> {\n    readonly definitions: Partial<Record<string, Cubism2Spec.Motion[]>>;\n\n    readonly groups = { idle: 'idle' } as const;\n\n    readonly motionDataType = 'arraybuffer';\n\n    readonly queueManager = new MotionQueueManager();\n\n    readonly settings!: Cubism2ModelSettings;\n\n    expressionManager?: Cubism2ExpressionManager;\n\n    constructor(settings: Cubism2ModelSettings, options?: MotionManagerOptions) {\n        super(settings, options);\n\n        this.definitions = this.settings.motions;\n\n        this.init(options);\n    }\n\n    protected init(options?: MotionManagerOptions) {\n        super.init(options);\n\n        if (this.settings.expressions) {\n            this.expressionManager = new Cubism2ExpressionManager(this.settings, options);\n        }\n    }\n\n    isFinished(): boolean {\n        return this.queueManager.isFinished();\n    }\n\n    createMotion(data: ArrayBuffer, group: string, definition: Cubism2Spec.Motion): Live2DMotion {\n        const motion = Live2DMotion.loadMotion(data);\n\n        const defaultFadingDuration =\n            group === this.groups.idle\n                ? config.idleMotionFadingDuration\n                : config.motionFadingDuration;\n\n        motion.setFadeIn(definition.fade_in! > 0 ? definition.fade_in! : defaultFadingDuration);\n        motion.setFadeOut(definition.fade_out! > 0 ? definition.fade_out! : defaultFadingDuration);\n\n        return motion;\n    }\n\n    getMotionFile(definition: Cubism2Spec.Motion): string {\n        return definition.file;\n    }\n\n    protected getMotionName(definition: Cubism2Spec.Motion): string {\n        return definition.file;\n    }\n\n    protected getSoundFile(definition: Cubism2Spec.Motion): string | undefined {\n        return definition.sound;\n    }\n\n    protected _startMotion(motion: Live2DMotion, onFinish?: (motion: Live2DMotion) => void): number {\n        motion.onFinishHandler = onFinish;\n\n        this.queueManager.stopAllMotions();\n\n        return this.queueManager.startMotion(motion);\n    }\n\n    protected _stopAllMotions(): void {\n        this.queueManager.stopAllMotions();\n    }\n\n    protected updateParameters(model: Live2DModelWebGL, now: DOMHighResTimeStamp): boolean {\n        return this.queueManager.updateParam(model);\n    }\n\n    destroy() {\n        super.destroy();\n\n        (this as Partial<Mutable<this>>).queueManager = undefined;\n    }\n}\n","import { clamp, rand } from '@/utils';\n\nconst enum EyeState {\n    Idle,\n    Closing,\n    Closed,\n    Opening,\n}\n\nexport class Live2DEyeBlink {\n    leftParam: number;\n    rightParam: number;\n\n    blinkInterval: DOMHighResTimeStamp = 4000;\n    closingDuration: DOMHighResTimeStamp = 100;\n    closedDuration: DOMHighResTimeStamp = 50;\n    openingDuration: DOMHighResTimeStamp = 150;\n\n    eyeState = EyeState.Idle;\n    eyeParamValue = 1;\n    closedTimer = 0;\n    nextBlinkTimeLeft = this.blinkInterval;\n\n    constructor(readonly coreModel: Live2DModelWebGL) {\n        this.leftParam = coreModel.getParamIndex('PARAM_EYE_L_OPEN');\n        this.rightParam = coreModel.getParamIndex('PARAM_EYE_R_OPEN');\n    }\n\n    setEyeParams(value: number) {\n        this.eyeParamValue = clamp(value, 0, 1);\n        this.coreModel.setParamFloat(this.leftParam, this.eyeParamValue);\n        this.coreModel.setParamFloat(this.rightParam, this.eyeParamValue);\n    }\n\n    update(dt: DOMHighResTimeStamp) {\n        switch (this.eyeState) {\n            case EyeState.Idle:\n                this.nextBlinkTimeLeft -= dt;\n\n                if (this.nextBlinkTimeLeft < 0) {\n                    this.eyeState = EyeState.Closing;\n                    this.nextBlinkTimeLeft =\n                        this.blinkInterval +\n                        this.closingDuration +\n                        this.closedDuration +\n                        this.openingDuration +\n                        rand(0, 2000);\n                }\n                break;\n\n            case EyeState.Closing:\n                this.setEyeParams(this.eyeParamValue + dt / this.closingDuration);\n\n                if (this.eyeParamValue <= 0) {\n                    this.eyeState = EyeState.Closed;\n                    this.closedTimer = 0;\n                }\n                break;\n\n            case EyeState.Closed:\n                this.closedTimer += dt;\n\n                if (this.closedTimer >= this.closedDuration) {\n                    this.eyeState = EyeState.Opening;\n                }\n                break;\n\n            case EyeState.Opening:\n                this.setEyeParams(this.eyeParamValue + dt / this.openingDuration);\n\n                if (this.eyeParamValue >= 1) {\n                    this.eyeState = EyeState.Idle;\n                }\n        }\n    }\n}\n","import { InternalModelOptions } from '@/cubism-common';\nimport { CommonHitArea, CommonLayout, InternalModel } from '@/cubism-common/InternalModel';\nimport { Cubism2ModelSettings } from './Cubism2ModelSettings';\nimport { Cubism2MotionManager } from './Cubism2MotionManager';\nimport { Live2DEyeBlink } from './Live2DEyeBlink';\nimport { Live2DPhysics } from './Live2DPhysics';\nimport { Live2DPose } from './Live2DPose';\n\n// prettier-ignore\nconst tempMatrixArray = new Float32Array([\n    1, 0, 0, 0,\n    0, 1, 0, 0,\n    0, 0, 1, 0,\n    0, 0, 0, 1,\n]);\n\nexport class Cubism2InternalModel extends InternalModel {\n    settings: Cubism2ModelSettings;\n\n    coreModel: Live2DModelWebGL;\n    motionManager: Cubism2MotionManager;\n\n    eyeBlink?: Live2DEyeBlink;\n    physics?: Live2DPhysics;\n    pose?: Live2DPose;\n\n    // parameter indices, cached for better performance\n    eyeballXParamIndex: number;\n    eyeballYParamIndex: number;\n    angleXParamIndex: number;\n    angleYParamIndex: number;\n    angleZParamIndex: number;\n    bodyAngleXParamIndex: number;\n    breathParamIndex: number;\n\n    textureFlipY = true;\n\n    /**\n     * Number of the drawables in this model.\n     */\n    drawDataCount = 0;\n\n    /**\n     * If true, the face culling will always be disabled when drawing the model,\n     * regardless of the model's internal flags.\n     */\n    disableCulling = false;\n\n    constructor(coreModel: Live2DModelWebGL, settings: Cubism2ModelSettings, options?: InternalModelOptions) {\n        super();\n\n        this.coreModel = coreModel;\n        this.settings = settings;\n        this.motionManager = new Cubism2MotionManager(settings, options);\n        this.eyeBlink = new Live2DEyeBlink(coreModel);\n\n        this.eyeballXParamIndex = coreModel.getParamIndex('PARAM_EYE_BALL_X');\n        this.eyeballYParamIndex = coreModel.getParamIndex('PARAM_EYE_BALL_Y');\n        this.angleXParamIndex = coreModel.getParamIndex('PARAM_ANGLE_X');\n        this.angleYParamIndex = coreModel.getParamIndex('PARAM_ANGLE_Y');\n        this.angleZParamIndex = coreModel.getParamIndex('PARAM_ANGLE_Z');\n        this.bodyAngleXParamIndex = coreModel.getParamIndex('PARAM_BODY_ANGLE_X');\n        this.breathParamIndex = coreModel.getParamIndex('PARAM_BREATH');\n\n        this.init();\n    }\n\n    protected init() {\n        super.init();\n\n        if (this.settings.initParams) {\n            this.settings.initParams.forEach(({ id, value }) => this.coreModel.setParamFloat(id, value));\n        }\n        if (this.settings.initOpacities) {\n            this.settings.initOpacities.forEach(({ id, value }) => this.coreModel.setPartsOpacity(id, value));\n        }\n\n        this.coreModel.saveParam();\n\n        const arr: any = this.coreModel.getModelContext()._$aS;\n\n        if (arr?.length) {\n            this.drawDataCount = arr.length;\n        }\n\n        let culling = this.coreModel.drawParamWebGL.culling;\n\n        Object.defineProperty(this.coreModel.drawParamWebGL, 'culling', {\n            set: (v: boolean) => culling = v,\n\n            // always return false when disabled\n            get: () => this.disableCulling ? false : culling,\n        });\n\n        const clipManager = this.coreModel.getModelContext().clipManager;\n        const originalSetupClip = clipManager.setupClip;\n\n        // after setupClip(), the GL viewport will be set to [0, 0, canvas.width, canvas.height],\n        // so we have to set it back\n        clipManager.setupClip = (modelContext, drawParam) => {\n            originalSetupClip.call(clipManager, modelContext, drawParam);\n\n            drawParam.gl.viewport(...this.viewport);\n        };\n    }\n\n    protected getSize(): [number, number] {\n        return [this.coreModel.getCanvasWidth(), this.coreModel.getCanvasHeight()];\n    }\n\n    protected getLayout(): CommonLayout {\n        const layout = this.settings.layout || {};\n\n        return {\n            ...layout,\n            centerX: layout.center_x,\n            centerY: layout.center_y,\n        };\n    }\n\n    updateWebGLContext(gl: WebGLRenderingContext, glContextID: number): void {\n        const drawParamWebGL = this.coreModel.drawParamWebGL;\n\n        drawParamWebGL.firstDraw = true;\n        drawParamWebGL.setGL(gl);\n        drawParamWebGL.glno = glContextID;\n\n        // reset WebGL buffers\n        for (const prop in drawParamWebGL) {\n            if (drawParamWebGL.hasOwnProperty(prop) && (drawParamWebGL as any)[prop] instanceof WebGLBuffer) {\n                (drawParamWebGL as any)[prop] = null;\n            }\n        }\n\n        const clipManager = this.coreModel.getModelContext().clipManager;\n        clipManager.curFrameNo = glContextID;\n\n        const framebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n\n        // force Live2D to re-create the framebuffer\n        clipManager.getMaskRenderTexture();\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    }\n\n    bindTexture(index: number, texture: WebGLTexture): void {\n        this.coreModel.setTexture(index, texture);\n    }\n\n    protected getHitAreaDefs(): CommonHitArea[] {\n        return this.settings.hitAreas?.map(hitArea => ({\n            id: hitArea.id,\n            name: hitArea.name,\n            index: this.coreModel.getDrawDataIndex(hitArea.id),\n        })) || [];\n    }\n\n    getDrawableIDs(): string[] {\n        const modelContext = this.coreModel.getModelContext();\n        const ids = [];\n\n        for (let i = 0; i < this.drawDataCount; i++) {\n            const drawData = modelContext.getDrawData(i);\n\n            if (drawData) {\n                ids.push(drawData.getDrawDataID().id);\n            }\n        }\n\n        return ids;\n    }\n\n    getDrawableIndex(id: string): number {\n        return this.coreModel.getDrawDataIndex(id);\n    }\n\n    getDrawableVertices(drawIndex: number | string): Float32Array {\n        if (typeof drawIndex === 'string') {\n            drawIndex = this.coreModel.getDrawDataIndex(drawIndex);\n\n            if (drawIndex === -1) throw new TypeError('Unable to find drawable ID: ' + drawIndex);\n        }\n\n        return this.coreModel.getTransformedPoints(drawIndex).slice();\n    }\n\n    update(dt: DOMHighResTimeStamp, now: DOMHighResTimeStamp): void {\n        super.update(dt, now);\n\n        const model = this.coreModel;\n\n        this.emit('beforeMotionUpdate');\n\n        const motionUpdated = this.motionManager.update(this.coreModel, now);\n\n        this.emit('afterMotionUpdate');\n\n        model.saveParam();\n\n        if (!motionUpdated) {\n            this.eyeBlink?.update(dt);\n        }\n\n        this.updateFocus();\n        this.updateNaturalMovements(dt, now);\n\n        this.physics?.update(now);\n        this.pose?.update(dt);\n\n        this.emit('beforeModelUpdate');\n\n        model.update();\n        model.loadParam();\n    }\n\n    updateFocus() {\n        this.coreModel.addToParamFloat(this.eyeballXParamIndex, this.focusController.x);\n        this.coreModel.addToParamFloat(this.eyeballYParamIndex, this.focusController.y);\n        this.coreModel.addToParamFloat(this.angleXParamIndex, this.focusController.x * 30);\n        this.coreModel.addToParamFloat(this.angleYParamIndex, this.focusController.y * 30);\n        this.coreModel.addToParamFloat(this.angleZParamIndex, this.focusController.x * this.focusController.y * -30);\n        this.coreModel.addToParamFloat(this.bodyAngleXParamIndex, this.focusController.x * 10);\n    }\n\n    updateNaturalMovements(dt: DOMHighResTimeStamp, now: DOMHighResTimeStamp) {\n        const t = (now / 1000) * 2 * Math.PI;\n\n        this.coreModel.addToParamFloat(this.angleXParamIndex, 15 * Math.sin(t / 6.5345) * 0.5);\n        this.coreModel.addToParamFloat(this.angleYParamIndex, 8 * Math.sin(t / 3.5345) * 0.5);\n        this.coreModel.addToParamFloat(this.angleZParamIndex, 10 * Math.sin(t / 5.5345) * 0.5);\n        this.coreModel.addToParamFloat(this.bodyAngleXParamIndex, 4 * Math.sin(t / 15.5345) * 0.5);\n\n        this.coreModel.setParamFloat(this.breathParamIndex, 0.5 + 0.5 * Math.sin(t / 3.2345));\n    }\n\n    draw(gl: WebGLRenderingContext): void {\n        const disableCulling = this.disableCulling;\n\n        // culling must be disabled to get this cubism2 model drawn properly on a framebuffer\n        if (gl.getParameter(gl.FRAMEBUFFER_BINDING)) {\n            this.disableCulling = true;\n        }\n\n        const matrix = this.drawingMatrix;\n\n        // set given 3x3 matrix into a 4x4 matrix\n        tempMatrixArray[0] = matrix.a;\n        tempMatrixArray[1] = matrix.b;\n        tempMatrixArray[4] = matrix.c;\n        tempMatrixArray[5] = matrix.d;\n        tempMatrixArray[12] = matrix.tx;\n        tempMatrixArray[13] = matrix.ty;\n\n        this.coreModel.setMatrix(tempMatrixArray);\n        this.coreModel.draw();\n\n        this.disableCulling = disableCulling;\n    }\n\n    destroy() {\n        super.destroy();\n\n        // cubism2 core has a super dumb memory management so there's basically nothing much to do to release the model\n        (this as Partial<this>).coreModel = undefined;\n    }\n}\n","import { ModelSettings } from '@/cubism-common/ModelSettings';\nimport { copyArray, copyProperty } from '../utils';\n\nexport class Cubism2ModelSettings extends ModelSettings {\n    json!: Cubism2Spec.ModelJSON;\n\n    // files\n    moc: string;\n    textures!: string[];\n    pose?: string;\n    physics?: string;\n\n    // metadata\n    layout?: Cubism2Spec.Layout;\n    hitAreas?: Cubism2Spec.HitArea[];\n    initParams?: Cubism2Spec.InitParam[];\n    initOpacities?: Cubism2Spec.InitOpacity[];\n\n    // motions\n    expressions?: Cubism2Spec.Expression[];\n    motions: Record<string, Cubism2Spec.Motion[]> = {};\n\n    /**\n     * Checks if a JSON object is valid model settings.\n     * @param json\n     */\n    static isValidJSON(json: any): json is Cubism2Spec.ModelJSON {\n        // should always return a boolean\n        return !!json\n            && typeof json.model === 'string'\n            && json.textures?.length > 0\n\n            // textures must be an array of strings\n            && json.textures.every((item: any) => typeof item === 'string');\n    }\n\n    constructor(json: Cubism2Spec.ModelJSON & { url: string }) {\n        super(json);\n\n        if (!Cubism2ModelSettings.isValidJSON(json)) {\n            throw new TypeError('Invalid JSON.');\n        }\n\n        this.moc = json.model;\n\n        // copy textures array\n        copyArray('string', json, this, 'textures', 'textures');\n\n        this.copy(json);\n    }\n\n    /**\n     * Validates and copies *optional* properties from raw JSON.\n     */\n    protected copy(json: Cubism2Spec.ModelJSON): void {\n        copyProperty('string', json, this, 'name', 'name');\n        copyProperty('string', json, this, 'pose', 'pose');\n        copyProperty('string', json, this, 'physics', 'physics');\n\n        copyProperty('object', json, this, 'layout', 'layout');\n        copyProperty('object', json, this, 'motions', 'motions');\n\n        copyArray('object', json, this, 'hit_areas', 'hitAreas');\n        copyArray('object', json, this, 'expressions', 'expressions');\n        copyArray('object', json, this, 'init_params', 'initParams');\n        copyArray('object', json, this, 'init_opacities', 'initOpacities');\n    }\n\n    replaceFiles(replace: (file: string, path: string) => string) {\n        super.replaceFiles(replace);\n\n        for (const [group, motions] of Object.entries(this.motions)) {\n            for (let i = 0; i < motions.length; i++) {\n                motions[i]!.file = replace(motions[i]!.file, `motions.${group}[${i}].file`);\n\n                if (motions[i]!.sound !== undefined) {\n                    motions[i]!.sound = replace(motions[i]!.sound!, `motions.${group}[${i}].sound`);\n                }\n            }\n        }\n\n        if (this.expressions) {\n            for (let i = 0; i < this.expressions.length; i++) {\n                this.expressions[i]!.file = replace(this.expressions[i]!.file, `expressions[${i}].file`);\n            }\n        }\n    }\n}\n","const SRC_TYPE_MAP = {\n    x: PhysicsHair.Src.SRC_TO_X,\n    y: PhysicsHair.Src.SRC_TO_Y,\n    angle: PhysicsHair.Src.SRC_TO_G_ANGLE,\n};\n\nconst TARGET_TYPE_MAP = {\n    x: PhysicsHair.Src.SRC_TO_X,\n    y: PhysicsHair.Src.SRC_TO_Y,\n    angle: PhysicsHair.Src.SRC_TO_G_ANGLE,\n};\n\nexport class Live2DPhysics {\n    physicsHairs: PhysicsHair[] = [];\n\n    constructor(readonly coreModel: Live2DModelWebGL, json: Cubism2Spec.PhysicsJSON) {\n        if (json.physics_hair) {\n            this.physicsHairs = json.physics_hair.map(definition => {\n                const physicsHair = new PhysicsHair();\n\n                physicsHair.setup(definition.setup.length, definition.setup.regist, definition.setup.mass);\n\n                definition.src.forEach(({ id, ptype, scale, weight }) => {\n                    const type = SRC_TYPE_MAP[ptype];\n\n                    if (type) {\n                        physicsHair.addSrcParam(type, id, scale, weight);\n                    }\n                });\n\n                definition.targets.forEach(({ id, ptype, scale, weight }) => {\n                    const type = TARGET_TYPE_MAP[ptype];\n\n                    if (type) {\n                        physicsHair.addTargetParam(type, id, scale, weight);\n                    }\n                });\n\n                return physicsHair;\n            });\n        }\n    }\n\n    update(elapsed: DOMHighResTimeStamp) {\n        this.physicsHairs.forEach(physicsHair => physicsHair.update(this.coreModel, elapsed));\n    }\n}\n","import { clamp } from '@/utils';\n\nclass Live2DPartsParam {\n    paramIndex = -1;\n    partsIndex = -1;\n    link: Live2DPartsParam[] = [];\n\n    constructor(readonly id: string) {}\n\n    initIndex(model: Live2DModelWebGL) {\n        this.paramIndex = model.getParamIndex('VISIBLE:' + this.id);\n        this.partsIndex = model.getPartsDataIndex(PartsDataID.getID(this.id));\n        model.setParamFloat(this.paramIndex, 1);\n    }\n}\n\nexport class Live2DPose {\n    opacityAnimDuration: DOMHighResTimeStamp = 500;\n\n    partsGroups: Live2DPartsParam[][] = [];\n\n    constructor(readonly coreModel: Live2DModelWebGL, json: Cubism2Spec.PoseJSON) {\n        if (json.parts_visible) {\n            this.partsGroups = json.parts_visible.map(({ group }) =>\n                group.map(({ id, link }) => {\n                    const parts = new Live2DPartsParam(id);\n\n                    if (link) {\n                        parts.link = link.map(l => new Live2DPartsParam(l));\n                    }\n\n                    return parts;\n                }),\n            );\n\n            this.init();\n        }\n    }\n\n    init() {\n        this.partsGroups.forEach(group => {\n            group.forEach(parts => {\n                parts.initIndex(this.coreModel);\n\n                if (parts.paramIndex >= 0) {\n                    const visible = this.coreModel.getParamFloat(parts.paramIndex) !== 0;\n                    this.coreModel.setPartsOpacity(parts.partsIndex, visible ? 1 : 0);\n                    this.coreModel.setParamFloat(parts.paramIndex, visible ? 1 : 0);\n\n                    if (parts.link.length > 0) {\n                        parts.link.forEach(p => p.initIndex(this.coreModel));\n                    }\n                }\n            });\n        });\n    }\n\n    normalizePartsOpacityGroup(partsGroup: Live2DPartsParam[], dt: DOMHighResTimeStamp) {\n        const model = this.coreModel;\n        const phi = 0.5;\n        const maxBackOpacity = 0.15;\n        let visibleOpacity = 1;\n\n        let visibleIndex = partsGroup.findIndex(\n            ({ paramIndex, partsIndex }) => partsIndex >= 0 && model.getParamFloat(paramIndex) !== 0,\n        );\n\n        if (visibleIndex >= 0) {\n            const originalOpacity = model.getPartsOpacity(partsGroup[visibleIndex]!.partsIndex);\n\n            visibleOpacity = clamp(originalOpacity + dt / this.opacityAnimDuration, 0, 1);\n        } else {\n            visibleIndex = 0;\n            visibleOpacity = 1;\n        }\n\n        partsGroup.forEach(({ partsIndex }, index) => {\n            if (partsIndex >= 0) {\n                if (visibleIndex == index) {\n                    model.setPartsOpacity(partsIndex, visibleOpacity);\n                } else {\n                    let opacity = model.getPartsOpacity(partsIndex);\n\n                    // I can't understand this part, so just leave it original\n                    let a1;\n                    if (visibleOpacity < phi) {\n                        a1 = (visibleOpacity * (phi - 1)) / phi + 1;\n                    } else {\n                        a1 = ((1 - visibleOpacity) * phi) / (1 - phi);\n                    }\n                    let backOp = (1 - a1) * (1 - visibleOpacity);\n                    if (backOp > maxBackOpacity) {\n                        a1 = 1 - maxBackOpacity / (1 - visibleOpacity);\n                    }\n                    if (opacity > a1) {\n                        opacity = a1;\n                    }\n\n                    model.setPartsOpacity(partsIndex, opacity);\n                }\n            }\n        });\n    }\n\n    copyOpacity(partsGroup: Live2DPartsParam[]) {\n        const model = this.coreModel;\n\n        partsGroup.forEach(({ partsIndex, link }) => {\n            if (partsIndex >= 0 && link) {\n                const opacity = model.getPartsOpacity(partsIndex);\n\n                link.forEach(({ partsIndex }) => {\n                    if (partsIndex >= 0) {\n                        model.setPartsOpacity(partsIndex, opacity);\n                    }\n                });\n            }\n        });\n    }\n\n    update(dt: DOMHighResTimeStamp) {\n        this.partsGroups.forEach(partGroup => {\n            this.normalizePartsOpacityGroup(partGroup, dt);\n            this.copyOpacity(partGroup);\n        });\n    }\n}\n","import { Cubism2InternalModel } from '@/cubism2/Cubism2InternalModel';\nimport { Cubism2ModelSettings } from '@/cubism2/Cubism2ModelSettings';\nimport { Live2DPhysics } from '@/cubism2/Live2DPhysics';\nimport { Live2DPose } from '@/cubism2/Live2DPose';\nimport { Live2DFactory, Live2DFactoryOptions } from '@/factory/Live2DFactory';\n\nLive2DFactory.registerRuntime({\n    version: 2,\n\n    test(source: any): boolean {\n        return source instanceof Cubism2ModelSettings || Cubism2ModelSettings.isValidJSON(source);\n    },\n\n    ready(): Promise<void> {\n        return Promise.resolve();\n    },\n\n    isValidMoc(modelData: ArrayBuffer): boolean {\n        if (modelData.byteLength < 3) {\n            return false;\n        }\n\n        const view = new Int8Array(modelData, 0, 3);\n\n        return String.fromCharCode(...view) === 'moc';\n    },\n\n    createModelSettings(json: object): Cubism2ModelSettings {\n        return new Cubism2ModelSettings(json as Cubism2Spec.ModelJSON & { url: string });\n    },\n\n    createCoreModel(data: ArrayBuffer): Live2DModelWebGL {\n        const model = Live2DModelWebGL.loadModel(data);\n\n        const error = Live2D.getError();\n        if (error) throw error;\n\n        return model;\n    },\n\n    createInternalModel(coreModel: Live2DModelWebGL, settings: Cubism2ModelSettings, options?: Live2DFactoryOptions): Cubism2InternalModel {\n        return new Cubism2InternalModel(coreModel, settings, options);\n    },\n\n    createPose(coreModel: Live2DModelWebGL, data: any): Live2DPose {\n        return new Live2DPose(coreModel, data);\n    },\n\n    createPhysics(coreModel: Live2DModelWebGL, data: any): Live2DPhysics {\n        return new Live2DPhysics(coreModel, data);\n    },\n});\n","if (!(window as any).Live2D) {\n    throw new Error('Cannot find Cubism 2 runtime. Did you forget to include the live2d.min.js?');\n}\n","export * from './common';\nexport * from './cubism2';\n"],"sourceRoot":""}